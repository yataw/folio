<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Рисование</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen_.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 0172a, Revision: 161</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00029.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>Рисование</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="member-group"></a>
Инициализация библиотеки</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWND&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b">txCreateWindow</a> (int sizeX=800, int sizeY=600, unsigned style=WS_SYSMENU|1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создание окна рисования  <a href="#gaca799138bbc60568976aef93fcb3bb2b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gae05b7bb52b782b86796201f9f96d0f58">txSetDefaults</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Установка параметров рисования по умолчанию.  <a href="#gae05b7bb52b782b86796201f9f96d0f58"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga6971b22d5486b242e20a8dea1f21422a">txOK</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверка правильности работы библиотеки  <a href="#ga6971b22d5486b242e20a8dea1f21422a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga69be92455ac555cb03470cb4ef4ac67c">txGetExtent</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размер окна рисования в виде структуры POINT.  <a href="#ga69be92455ac555cb03470cb4ef4ac67c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaed186909e8de1f9a6e5f78c362d9b607">txGetExtentX</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает ширину окна рисования.  <a href="#gaed186909e8de1f9a6e5f78c362d9b607"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga1838cd6a438d4bea5f26bfa47a103a0d">txGetExtentY</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает высоту окна рисования.  <a href="#ga1838cd6a438d4bea5f26bfa47a103a0d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67">txDC</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает дескриптор контекста рисования холста  <a href="#ga37ac6a8a8899decc9e2979d7ccd11f67"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWND&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8">txWindow</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает дескриптор окна холста  <a href="#gae47b05ec325f3bda871e46c8c74919e8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749">txVersion</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает строку с информацией о текущей версии библиотеки.  <a href="#ga732d4db1467f11a4b569b9d6f2383749"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gacd2416cd6b89106ab6700d0c75922bee">txVersionNumber</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает номер версии библиотеки.  <a href="#gacd2416cd6b89106ab6700d0c75922bee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gab8f6180cff1fe90819e3bbb541a90508">txGetModuleFileName</a> (bool fileNameOnly=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает имя исполняемого файла или изначальный заголовок окна TXLib.  <a href="#gab8f6180cff1fe90819e3bbb541a90508"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Установка цветов и режимов рисования</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5">txColors</a> { <br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8">TX_BLACK</a> =  RGB ( 0, 0, 0), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de">TX_BLUE</a> =  RGB ( 0, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032">TX_GREEN</a> =  RGB ( 0, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d">TX_CYAN</a> =  RGB ( 0, 128, 128), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927">TX_RED</a> =  RGB (128, 0, 0), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5aec305e1fce8a99fca3c442364389e22b">TX_MAGENTA</a> =  RGB (128, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b">TX_BROWN</a> =  RGB (128, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9">TX_ORANGE</a> =  RGB (255, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a">TX_GRAY</a> =  RGB (160, 160, 160), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5">TX_DARKGRAY</a> =  RGB (128, 128, 128), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e">TX_LIGHTGRAY</a> =  RGB (192, 192, 192), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030">TX_LIGHTBLUE</a> =  RGB ( 0, 0, 255), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b">TX_LIGHTGREEN</a> =  RGB ( 0, 255, 128), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a05b6100527e0b7a96dcda198a1439382">TX_LIGHTCYAN</a> =  RGB ( 0, 255, 255), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504">TX_LIGHTRED</a> =  RGB (255, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5af3ef6cac77e7ca01e271a3562ceeb52f">TX_LIGHTMAGENTA</a> =  RGB (255, 0, 255), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454">TX_PINK</a> =  RGB (255, 128, 255), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0">TX_YELLOW</a> =  RGB (255, 255, 128), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025">TX_WHITE</a> =  RGB (255, 255, 255), 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8">TX_TRANSPARENT</a> =  0xFFFFFFFF, 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac">TX_NULL</a> =  TX_TRANSPARENT, 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5aba144158f057694f9f08189c0b6a7d65">TX_HUE</a> =  0x04000000, 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a18419bb9192c947fb25d517765dd04cc">TX_SATURATION</a> =  0x05000000, 
<br/>
&#160;&#160;<a class="el" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e">TX_LIGHTNESS</a> =  0x06000000
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><p>Названия предопределенных цветов. </p>
 <a href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5">Подробнее...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341">RGB</a> (int red, int green, int blue)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает (смешивает) цвет из трех базовых цветов (компонент).  <a href="#ga5e96023070a7e836d57ff9f4fac8a341"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a">txSetColor</a> (COLORREF color, int thickness=1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет и толщину линий, цвет текста.  <a href="#ga4006aaa9b91b25f81bfd88587842531a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga977c584db1ecfba20898615a948ab675">txColor</a> (double red, double green, double blue)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет линий и текста.  <a href="#ga977c584db1ecfba20898615a948ab675"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d">txGetColor</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет линий и текста.  <a href="#ga4894075399ec8e8747177f90c15fb35d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf">txSetFillColor</a> (COLORREF color)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет заполнения фигур.  <a href="#gafb1459949ebb32b199d07f5464205baf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga385a6f84e8f1447a33047fa0f3be972b">txFillColor</a> (double red, double green, double blue)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет заполнения фигур.  <a href="#ga385a6f84e8f1447a33047fa0f3be972b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76">txGetFillColor</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет заполнения фигур.  <a href="#ga1a65fa9ddfd07bda8ab3e95873991b76"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga3ddd148ec8af2d1f722b398ee7e17a71">txSetROP2</a> (int mode=R2_COPYPEN)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает режим взаимодействия цветов при рисовании.  <a href="#ga3ddd148ec8af2d1f722b398ee7e17a71"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gad05e2877657ce6d3a55174fe51c4b0c5">txExtractColor</a> (COLORREF color, COLORREF component)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.  <a href="#gad05e2877657ce6d3a55174fe51c4b0c5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga0dc8953591b63696392ec581c6b25f7c">txRGB2HSL</a> (COLORREF rgbColor)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Преобразует цвет из формата RGB в формат HSL.  <a href="#ga0dc8953591b63696392ec581c6b25f7c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga1a87b7cd3e5a74e4dc6828d42d03fffa">txHSL2RGB</a> (COLORREF hslColor)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Преобразует цвет из формата HSL в формат RGB.  <a href="#ga1a87b7cd3e5a74e4dc6828d42d03fffa"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Рисование фигур</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga2a3940b99d02c630364d4b74e7d08a23">txClear</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Стирает холст текущим цветом заполнения.  <a href="#ga2a3940b99d02c630364d4b74e7d08a23"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga8f2821365f3a6addfcd8c19dd8971ce2">txSetPixel</a> (int x, int y, COLORREF color)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует пиксель (точку на экране).  <a href="#ga8f2821365f3a6addfcd8c19dd8971ce2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gada8f6502237b02eaf8759df026630c74">txPixel</a> (int x, int y, double red, double green, double blue)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует пиксель (точку на экране).  <a href="#gada8f6502237b02eaf8759df026630c74"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga8e07f7bdb1c6a3d461960f14813a3425">txGetPixel</a> (int x, int y)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет точки (пикселя) на экране.  <a href="#ga8e07f7bdb1c6a3d461960f14813a3425"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46">txLine</a> (int x0, int y0, int x1, int y1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует линию.  <a href="#ga21a12a1077b09af8bdc59e147ca15d46"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2">txRectangle</a> (int x0, int y0, int x1, int y1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует прямоугольник.  <a href="#ga48ebe804bb14c53276f0b334ea7761a2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e">txPolygon</a> (const POINT points[], int numPoints)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует ломаную линию или многоугольник.  <a href="#ga4e872a3d71ac242bd40d614b9c03f86e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5">txEllipse</a> (int x0, int y0, int x1, int y1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует эллипс.  <a href="#gaf4e90f66d74b812afcd17203cf95b8b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3">txCircle</a> (int x, int y, int r)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует окружность или круг.  <a href="#ga6870267a8cb62bddbe80ac2483b120a3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3">txArc</a> (int x0, int y0, int x1, int y1, int startAngle, int totalAngle)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует дугу эллипса.  <a href="#gaadb118d9b8ae81cc60d43300326e52a3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b">txPie</a> (int x0, int y0, int x1, int y1, int startAngle, int totalAngle)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует сектор эллипса.  <a href="#ga732885ecfaf47b4051f278473724f44b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa">txChord</a> (int x0, int y0, int x1, int y1, int startAngle, int totalAngle)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует хорду эллипса.  <a href="#ga5ee97b4f6688ff24da8a494dc1c15daa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga2a51480e07b3e31eb4e74ea29a8a480a">txFloodFill</a> (int x, int y, COLORREF color=TX_TRANSPARENT, DWORD mode=FLOODFILLSURFACE)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Заливает произвольный контур текущим цветом заполнения.  <a href="#ga2a51480e07b3e31eb4e74ea29a8a480a"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Работа с текстом</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692">txTextOut</a> (int x, int y, const char text[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует текст.  <a href="#ga3b57379a564dd459d1573a9c8db0c692"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga5b3f03bfb0444ac3b7ec74128d878a3f">txDrawText</a> (int x0, int y0, int x1, int y1, const char text[], unsigned format=DT_CENTER|DT_VCENTER|DT_WORDBREAK|DT_WORD_ELLIPSIS)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует текст, размещенный в прямоугольной области.  <a href="#ga5b3f03bfb0444ac3b7ec74128d878a3f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf">txSelectFont</a> (const char name[], int sizeY, int sizeX=-1, int bold=FW_DONTCARE, bool italic=false, bool underline=false, bool strikeout=false)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выбирает текущий шрифт.  <a href="#ga7726bc7f942c2540b172f83c3c1d5adf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">SIZE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga356c475609cf282310fc336821adf71f">txGetTextExtent</a> (const char text[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет размеры текстовой надписи.  <a href="#ga356c475609cf282310fc336821adf71f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6">txGetTextExtentX</a> (const char text[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет ширину текстовой надписи.  <a href="#gaad385937fb3526c8f4054ae288d285c6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024">txGetTextExtentY</a> (const char text[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет высоту текстовой надписи.  <a href="#ga3a34e3baf660b310f6ca0d373f36c024"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga5a3cef04fcf688a051a9eafd6c8338a7">txSetTextAlign</a> (unsigned align=TA_CENTER|TA_BASELINE)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущее выравнивание текста.  <a href="#ga5a3cef04fcf688a051a9eafd6c8338a7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">LOGFONT *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaf147a93f96fadeb7a6a0b6d7f1320bcb">txFontExist</a> (const char name[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Ищет шрифт по его названию.  <a href="#gaf147a93f96fadeb7a6a0b6d7f1320bcb"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Рисование в памяти (на "виртуальном холсте") и загрузка изображений</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gac41928e50c6374843e95c270a8c27119">txCreateCompatibleDC</a> (int sizeX, int sizeY, HBITMAP bitmap=NULL)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.  <a href="#gac41928e50c6374843e95c270a8c27119"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59">txLoadImage</a> (const char filename[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Загружает из файла изображение в формате BMP. Делает это довольно медленно.  <a href="#ga2b4df3ccb139bccaf3f7163986cf9b59"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42">txDeleteDC</a> (HDC dc)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Уничтожает холст (контекст рисования, DC) в памяти.  <a href="#ga505f212582bf9b2bf95a4ef15f84af42"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76">txBitBlt</a> (HDC dest, int xDest, int yDest, int width, int height, HDC src, int xSrc, int ySrc, DWORD rOp=SRCCOPY)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой.  <a href="#gadf16aed8a30951ff3239fffd440a8c76"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga22dc1561bd086c35575bc296d2b379e6">txTransparentBlt</a> (HDC dest, int xDest, int yDest, int width, int height, HDC src, int xSrc, int ySrc, COLORREF transColor=TX_BLACK)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности.  <a href="#ga22dc1561bd086c35575bc296d2b379e6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gac56527a904e9f996fc388e96dd086f45">txAlphaBlend</a> (HDC dest, int xDest, int yDest, int width, int height, HDC src, int xSrc, int ySrc, double alpha=1.0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности.  <a href="#gac56527a904e9f996fc388e96dd086f45"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Вспомогательные функции</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a">txBegin</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Блокирует обновление изображения окна, во избежание мигания.  <a href="#gae92e621aaed81f90e4d142356e38762a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6">txEnd</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разблокирует обновление окна, заблокированное функцией <a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>.  <a href="#ga809dc04afd5348247846ee01ce9a06e6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gac9d8435ced05ddc5c29a1a5c9f58f752">txDestroyWindow</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Уничтожает окно TXlib.  <a href="#gac9d8435ced05ddc5c29a1a5c9f58f752"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30">txSleep</a> (int time)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Задерживает выполнение программы на определенное время.  <a href="#ga483686b1ddea3a3de72ff5117f17ea30"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41">txUpdateWindow</a> (int update=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разрешает или запрещает автоматическое обновление изображения в окне.  <a href="#gaff3d9c60900531f438a19216485bdd41"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gad4ee4d2a16f8f38412e0e7b1c380bf4d">txSelectObject</a> (HGDIOBJ obj)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий объект GDI.  <a href="#gad4ee4d2a16f8f38412e0e7b1c380bf4d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga478e37d200950e3e5ad78779e803387e">txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillCloseAndIWillNotBeAskingWhereIsMyPicture</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Делает нечто иногда удобное. См. название функции.  <a href="#ga478e37d200950e3e5ad78779e803387e"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Функции консоли</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f">txSetConsoleAttr</a> (WORD colors=0x07)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает цветовые атрибуты консоли.  <a href="#gad993cf2d466cf203a1365e117b937d7f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">WORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2">txGetConsoleAttr</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущие цветовые атрибуты консоли.  <a href="#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e">txClearConsole</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Стирает текст консоли.  <a href="#ga2cb63c12d9206e9ed2b2c83c9a08f68e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326">txSetConsoleCursorPos</a> (int x, int y)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает позицию мигающего курсора консоли.  <a href="#ga01d08fd56e2e727a76c8ed724a735326"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga3227242c57eef33049cdaee655f4faee">txGetConsoleCursorPos</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает позицию мигающего курсора консоли.  <a href="#ga3227242c57eef33049cdaee655f4faee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e">txGetConsoleFontSize</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размеры шрифта консоли.  <a href="#ga56faf7c36cf0112165fb705fedf6ec8e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed">txTextCursor</a> (bool blink=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Запрещает или разрешает рисование мигающего курсора в окне.  <a href="#gaa148d2040d20ed74cf46ab186c35f9ed"></a><br/></td></tr>
</table>
<hr/><h2>Перечисления</h2>
<a class="anchor" id="ga3e94cfad3d9080241f84129d6e5c09b5"></a><!-- doxytag: member="TXLib.h::txColors" ref="ga3e94cfad3d9080241f84129d6e5c09b5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5">txColors</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Названия предопределенных цветов. </p>
<p>См. TX_BLACK, TX_BLUE и другие цвета в списке выше.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga8e07f7bdb1c6a3d461960f14813a3425" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
          <a class="code" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac" title="Прозрачный цвет. Отключает рисование.">TX_NULL</a>);
</pre></div> </dd>
</dl>
<dl><dt><b>Элементы перечислений: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8"></a><!-- doxytag: member="TX_BLACK" ref="gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" args="" -->TX_BLACK</em>&nbsp;</td><td>
<p>Черный цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de"></a><!-- doxytag: member="TX_BLUE" ref="gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" args="" -->TX_BLUE</em>&nbsp;</td><td>
<p>Темно-синий цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032"></a><!-- doxytag: member="TX_GREEN" ref="gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" args="" -->TX_GREEN</em>&nbsp;</td><td>
<p>Зеленый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d"></a><!-- doxytag: member="TX_CYAN" ref="gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d" args="" -->TX_CYAN</em>&nbsp;</td><td>
<p>Бирюзовый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927"></a><!-- doxytag: member="TX_RED" ref="gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" args="" -->TX_RED</em>&nbsp;</td><td>
<p>Темно-красный цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aec305e1fce8a99fca3c442364389e22b"></a><!-- doxytag: member="TX_MAGENTA" ref="gga3e94cfad3d9080241f84129d6e5c09b5aec305e1fce8a99fca3c442364389e22b" args="" -->TX_MAGENTA</em>&nbsp;</td><td>
<p>Темно-малиновый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b"></a><!-- doxytag: member="TX_BROWN" ref="gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" args="" -->TX_BROWN</em>&nbsp;</td><td>
<p>Коричневый цвет. Некрасивый. Do it yourself using <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9"></a><!-- doxytag: member="TX_ORANGE" ref="gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" args="" -->TX_ORANGE</em>&nbsp;</td><td>
<p>Оранжевый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a"></a><!-- doxytag: member="TX_GRAY" ref="gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" args="" -->TX_GRAY</em>&nbsp;</td><td>
<p>Серый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5"></a><!-- doxytag: member="TX_DARKGRAY" ref="gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" args="" -->TX_DARKGRAY</em>&nbsp;</td><td>
<p>Темно-серый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e"></a><!-- doxytag: member="TX_LIGHTGRAY" ref="gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" args="" -->TX_LIGHTGRAY</em>&nbsp;</td><td>
<p>Светло-серый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030"></a><!-- doxytag: member="TX_LIGHTBLUE" ref="gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030" args="" -->TX_LIGHTBLUE</em>&nbsp;</td><td>
<p>Светло-синий цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b"></a><!-- doxytag: member="TX_LIGHTGREEN" ref="gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b" args="" -->TX_LIGHTGREEN</em>&nbsp;</td><td>
<p>Светло-зеленый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a05b6100527e0b7a96dcda198a1439382"></a><!-- doxytag: member="TX_LIGHTCYAN" ref="gga3e94cfad3d9080241f84129d6e5c09b5a05b6100527e0b7a96dcda198a1439382" args="" -->TX_LIGHTCYAN</em>&nbsp;</td><td>
<p>Светло-бирюзовый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504"></a><!-- doxytag: member="TX_LIGHTRED" ref="gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" args="" -->TX_LIGHTRED</em>&nbsp;</td><td>
<p>Светло-красный цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5af3ef6cac77e7ca01e271a3562ceeb52f"></a><!-- doxytag: member="TX_LIGHTMAGENTA" ref="gga3e94cfad3d9080241f84129d6e5c09b5af3ef6cac77e7ca01e271a3562ceeb52f" args="" -->TX_LIGHTMAGENTA</em>&nbsp;</td><td>
<p>Светло-малиновый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454"></a><!-- doxytag: member="TX_PINK" ref="gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454" args="" -->TX_PINK</em>&nbsp;</td><td>
<p>Розовый гламурный:) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0"></a><!-- doxytag: member="TX_YELLOW" ref="gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" args="" -->TX_YELLOW</em>&nbsp;</td><td>
<p>Желтый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025"></a><!-- doxytag: member="TX_WHITE" ref="gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" args="" -->TX_WHITE</em>&nbsp;</td><td>
<p>Белый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8"></a><!-- doxytag: member="TX_TRANSPARENT" ref="gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" args="" -->TX_TRANSPARENT</em>&nbsp;</td><td>
<p>Прозрачный цвет. <em>Отключает рисование.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac"></a><!-- doxytag: member="TX_NULL" ref="gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac" args="" -->TX_NULL</em>&nbsp;</td><td>
<p>Прозрачный цвет. <em>Отключает рисование.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aba144158f057694f9f08189c0b6a7d65"></a><!-- doxytag: member="TX_HUE" ref="gga3e94cfad3d9080241f84129d6e5c09b5aba144158f057694f9f08189c0b6a7d65" args="" -->TX_HUE</em>&nbsp;</td><td>
<p>Цветовой тон цвета в модели HSL. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a18419bb9192c947fb25d517765dd04cc"></a><!-- doxytag: member="TX_SATURATION" ref="gga3e94cfad3d9080241f84129d6e5c09b5a18419bb9192c947fb25d517765dd04cc" args="" -->TX_SATURATION</em>&nbsp;</td><td>
<p>Насыщенность цвета в модели HSL. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e"></a><!-- doxytag: member="TX_LIGHTNESS" ref="gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e" args="" -->TX_LIGHTNESS</em>&nbsp;</td><td>
<p>Светлота цвета в модели HSL. </p>
</td></tr>
</table>
</dd>
</dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l00666">666</a></p>

</div>
</div>
<hr/><h2>Функции</h2>
<a class="anchor" id="gaca799138bbc60568976aef93fcb3bb2b"></a><!-- doxytag: member="TXLib.h::txCreateWindow" ref="gaca799138bbc60568976aef93fcb3bb2b" args="(int sizeX=800, int sizeY=600, unsigned style=WS_SYSMENU|1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HWND txCreateWindow </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeX</em> = <code>800</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeY</em> = <code>600</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>style</em> = <code>WS_SYSMENU|1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Создание окна рисования </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">sizeX</td><td>Размер окна по горизонтали (в пикселях) </td></tr>
    <tr><td class="paramname">sizeY</td><td>Размер окна по вертикали (в пикселях) </td></tr>
    <tr><td class="paramname">style</td><td>Если 1 (по умолчанию), окно центрируется на экране.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер) окна TXLib. Если окно не открыто, возвращается NULL.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd><ul>
<li>На самом деле параметр <code>style</code> задает стиль окна. Если стиль окна содержит <code>WS_SYSMENU</code> (значение по умолчанию), окно считается главным.</li>
<li>Если <em>младший бит стиля</em> выставлен в 1 (по умолчанию), окно центрируется на экране.</li>
<li>Главное окно должно быть только одно и создаваться первым. При закрытии главного окна программа завершается.<br/>
 Вспомогательные окна могут создаваться по одному на каждый файл многофайлового проекта. При их создании <em>не</em> надо указывать WS_SYSMENU. Для закрытия вспомогательных окон используется <a class="el" href="a00029.htm#gac9d8435ced05ddc5c29a1a5c9f58f752" title="Уничтожает окно TXlib.">txDestroyWindow()</a>.</li>
<li>При создании окна к стилю автоматически добавляются стили WS_POPUP, WS_BORDER и WS_CAPTION.</li>
<li>Устанавливаются параметры рисования по умолчанию, см. функцию <a class="el" href="a00029.htm#gae05b7bb52b782b86796201f9f96d0f58" title="Установка параметров рисования по умолчанию.">txSetDefaults()</a>.</li>
</ul>
</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga6971b22d5486b242e20a8dea1f21422a" title="Проверка правильности работы библиотеки">txOK()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow</a> ( 800,  600);                 <span class="comment">// Окно 800х600, главное, центрировано</span>
          <a class="code" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow</a> (1024,  768, WS_SYSMENU | 1); <span class="comment">// Окно 800х600, главное, центрировано</span>
          <a class="code" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow</a> (1024,  768, 1);              <span class="comment">// Окно 800х600, вспомогательное, центрировано</span>
          <a class="code" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow</a> (1024,  768, WS_SYSMENU);     <span class="comment">// Окно 800х600, главное, не центрировано</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae05b7bb52b782b86796201f9f96d0f58"></a><!-- doxytag: member="TXLib.h::txSetDefaults" ref="gae05b7bb52b782b86796201f9f96d0f58" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetDefaults </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Установка параметров рисования по умолчанию. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Параметры по умолчанию:<br/>
<br/>
</p>
<ul>
<li>Линии - цвет белый (TX_WHITE), толщина 1</li>
<li>Заливка - цвет белый (TX_WHITE)</li>
<li>Шрифт - Системный шрифт, цвет белый (TX_WHITE)</li>
<li>Логическая растровая операция - копирование цвета (R2_COPYPEN)</li>
</ul>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd>
<dd>
<a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a>, <a class="el" href="a00029.htm#ga3ddd148ec8af2d1f722b398ee7e17a71" title="Устанавливает режим взаимодействия цветов при рисовании.">txSetROP2()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gae05b7bb52b782b86796201f9f96d0f58" title="Установка параметров рисования по умолчанию.">txSetDefaults</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6971b22d5486b242e20a8dea1f21422a"></a><!-- doxytag: member="TXLib.h::txOK" ref="ga6971b22d5486b242e20a8dea1f21422a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txOK </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Проверка правильности работы библиотеки </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Состояние библиотеки: true - библиотека в порядке, false - не в порядке.</dd></dl>
<p>"Библиотека не в порядке" означает, что ее внутренние данные неверны. Самая простая причина - библиотека не инициализирована (не открыто окно), однако могут быть и другие.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow</a> (800, 600);
          <span class="keywordflow">if</span> (!<a class="code" href="a00029.htm#ga6971b22d5486b242e20a8dea1f21422a" title="Проверка правильности работы библиотеки">txOK</a>())
              {
              MessageBox (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Не смогла создать окно&quot;</span>, <span class="stringliteral">&quot;Извините&quot;</span>, MB_ICONSTOP);
              <span class="keywordflow">return</span>;
              }
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga69be92455ac555cb03470cb4ef4ac67c"></a><!-- doxytag: member="TXLib.h::txGetExtent" ref="ga69be92455ac555cb03470cb4ef4ac67c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txGetExtent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает размер окна рисования в виде структуры POINT. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Размер окна рисования в виде структуры POINT.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaed186909e8de1f9a6e5f78c362d9b607" title="Возвращает ширину окна рисования.">txGetExtentX()</a>, <a class="el" href="a00029.htm#ga1838cd6a438d4bea5f26bfa47a103a0d" title="Возвращает высоту окна рисования.">txGetExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT size = <a class="code" href="a00029.htm#ga69be92455ac555cb03470cb4ef4ac67c" title="Возвращает размер окна рисования в виде структуры POINT.">txGetExtent</a>();

          <a class="code" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine</a> (0, 0,      size.x, size.y);
          <a class="code" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine</a> (0, size.y, size.x, 0);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaed186909e8de1f9a6e5f78c362d9b607"></a><!-- doxytag: member="TXLib.h::txGetExtentX" ref="gaed186909e8de1f9a6e5f78c362d9b607" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetExtentX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает ширину окна рисования. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Ширина окна рисования.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga69be92455ac555cb03470cb4ef4ac67c" title="Возвращает размер окна рисования в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00029.htm#ga1838cd6a438d4bea5f26bfa47a103a0d" title="Возвращает высоту окна рисования.">txGetExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga5a3cef04fcf688a051a9eafd6c8338a7" title="Устанавливает текущее выравнивание текста.">txSetTextAlign</a> (TA_CENTER);
          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (<a class="code" href="a00029.htm#gaed186909e8de1f9a6e5f78c362d9b607" title="Возвращает ширину окна рисования.">txGetExtentX</a>() / 2, 100, <span class="stringliteral">&quot;Oh, oh, you&#39;re in the [army]middle now&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1838cd6a438d4bea5f26bfa47a103a0d"></a><!-- doxytag: member="TXLib.h::txGetExtentY" ref="ga1838cd6a438d4bea5f26bfa47a103a0d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetExtentY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает высоту окна рисования. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Высота окна рисования.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga69be92455ac555cb03470cb4ef4ac67c" title="Возвращает размер окна рисования в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00029.htm#gaed186909e8de1f9a6e5f78c362d9b607" title="Возвращает ширину окна рисования.">txGetExtentX()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">void</span> DrawHouse (<span class="keywordtype">int</span> height);
          ...
          DrawHouse (<a class="code" href="a00029.htm#ga1838cd6a438d4bea5f26bfa47a103a0d" title="Возвращает высоту окна рисования.">txGetExtentY</a>() / 2);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga37ac6a8a8899decc9e2979d7ccd11f67"></a><!-- doxytag: member="TXLib.h::txDC" ref="ga37ac6a8a8899decc9e2979d7ccd11f67" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC&amp; txDC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает дескриптор контекста рисования холста </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер, handler) контекста рисования (device context, DC) холста (HDC).</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>HDC возвращается в виде ссылки, что позволяет подменить его. Перед подменой надо сохранить старый дескриптор или освободить его с помощью <a class="el" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. До подмены рисование должно быть заблокировано с помощью <a class="el" href="a00033.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a> и после подмены разблокировано <a class="el" href="a00033.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow()</a>, <a class="el" href="a00033.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00033.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00033.htm#ga365c78a96945ad9e0a6462c28e01d400" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(),   0,   0, 100, 100, <a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0);
          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 100,   0, 100, 100, <a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0);
          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0,   100, 100, 100, <a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0);
          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 100, 100, 100, 100, <a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae47b05ec325f3bda871e46c8c74919e8"></a><!-- doxytag: member="TXLib.h::txWindow" ref="gae47b05ec325f3bda871e46c8c74919e8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HWND txWindow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает дескриптор окна холста </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер, handler) окна холста</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC()</a>, <a class="el" href="a00033.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00033.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00033.htm#ga365c78a96945ad9e0a6462c28e01d400" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          SetWindowText (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Новые заголовки - теперь и в ваших окнах!&quot;</span>);
          MessageBox (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Распишитесь&quot;</span>, <span class="stringliteral">&quot;Получите&quot;</span>, MB_ICONINFORMATION);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5e96023070a7e836d57ff9f4fac8a341"></a><!-- doxytag: member="TXLib.h::RGB" ref="ga5e96023070a7e836d57ff9f4fac8a341" args="(int red, int green, int blue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF RGB </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>blue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Создает (смешивает) цвет из трех базовых цветов (компонент). </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">red</td><td>Количество красного цвета в интервале [0; 255] </td></tr>
    <tr><td class="paramname">green</td><td>Количество зеленого цвета в интервале [0; 255] </td></tr>
    <tr><td class="paramname">blue</td><td>Количество синего цвета в интервале [0; 255]</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Созданный цвет в формате COLORREF.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a> </dd>
<dd>
<a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00029.htm#gad05e2877657ce6d3a55174fe51c4b0c5" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00029.htm#ga0dc8953591b63696392ec581c6b25f7c" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00029.htm#ga1a87b7cd3e5a74e4dc6828d42d03fffa" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));

          <span class="keywordtype">int</span> red = 20, green = 200, blue = 20;
          COLORREF color = <a class="code" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (red, green, blue);
          <a class="code" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (color);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga4006aaa9b91b25f81bfd88587842531a"></a><!-- doxytag: member="TXLib.h::txSetColor" ref="ga4006aaa9b91b25f81bfd88587842531a" args="(COLORREF color, int thickness=1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetColor </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>thickness</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий цвет и толщину линий, цвет текста. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>Цвет линий и текста, см. txColors, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </td></tr>
    <tr><td class="paramname">thickness</td><td>Толщина линий</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga977c584db1ecfba20898615a948ab675" title="Устанавливает текущий цвет линий и текста.">txColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#ga385a6f84e8f1447a33047fa0f3be972b" title="Устанавливает текущий цвет заполнения фигур.">txFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
          <a class="code" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0), 5);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga977c584db1ecfba20898615a948ab675"></a><!-- doxytag: member="TXLib.h::txColor" ref="ga977c584db1ecfba20898615a948ab675" args="(double red, double green, double blue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txColor </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>blue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий цвет линий и текста. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">red</td><td>Количество красного цвета в интервале [0; 1] </td></tr>
    <tr><td class="paramname">green</td><td>Количество зеленого цвета в интервале [0; 1] </td></tr>
    <tr><td class="paramname">blue</td><td>Количество синего цвета в интервале [0; 1]</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga977c584db1ecfba20898615a948ab675" title="Устанавливает текущий цвет линий и текста.">txColor</a> (1.0, 1.0, 0.0);   <span class="comment">// Красный + зеленый = желтый</span>
          <a class="code" href="a00029.htm#ga977c584db1ecfba20898615a948ab675" title="Устанавливает текущий цвет линий и текста.">txColor</a> (1.0, 0.5, 0.25);  <span class="comment">// Нечто оранжевое</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga4894075399ec8e8747177f90c15fb35d"></a><!-- doxytag: member="TXLib.h::txGetColor" ref="ga4894075399ec8e8747177f90c15fb35d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txGetColor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущий цвет линий и текста. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущий цвет линий и текста, см. txColors, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF color = <a class="code" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gafb1459949ebb32b199d07f5464205baf"></a><!-- doxytag: member="TXLib.h::txSetFillColor" ref="gafb1459949ebb32b199d07f5464205baf" args="(COLORREF color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetFillColor </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий цвет заполнения фигур. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>Цвет заполнения, см. txColors, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga385a6f84e8f1447a33047fa0f3be972b" title="Устанавливает текущий цвет заполнения фигур.">txFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga977c584db1ecfba20898615a948ab675" title="Устанавливает текущий цвет линий и текста.">txColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
          <a class="code" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga385a6f84e8f1447a33047fa0f3be972b"></a><!-- doxytag: member="TXLib.h::txFillColor" ref="ga385a6f84e8f1447a33047fa0f3be972b" args="(double red, double green, double blue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txFillColor </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>blue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий цвет заполнения фигур. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">red</td><td>Количество красного цвета в интервале [0; 1] </td></tr>
    <tr><td class="paramname">green</td><td>Количество зеленого цвета в интервале [0; 1] </td></tr>
    <tr><td class="paramname">blue</td><td>Количество синего цвета в интервале [0; 1]</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga385a6f84e8f1447a33047fa0f3be972b" title="Устанавливает текущий цвет заполнения фигур.">txFillColor</a> (1.0, 0.5, 0.25);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1a65fa9ddfd07bda8ab3e95873991b76"></a><!-- doxytag: member="TXLib.h::txGetFillColor" ref="ga1a65fa9ddfd07bda8ab3e95873991b76" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txGetFillColor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущий цвет заполнения фигур. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущий цвет заполнения фигур, см. txColors, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF color = <a class="code" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3ddd148ec8af2d1f722b398ee7e17a71"></a><!-- doxytag: member="TXLib.h::txSetROP2" ref="ga3ddd148ec8af2d1f722b398ee7e17a71" args="(int mode=R2_COPYPEN)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetROP2 </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mode</em> = <code>R2_COPYPEN</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает режим взаимодействия цветов при рисовании. </p>
<p>При рисовании графическая библиотека может не просто красить пиксели на экране, а смешивать цвета экрана и текущие цвета линий и заполнения.</p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>Режим смешивания цветов</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущий режим взаимодействия цветов, см. txColors, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl>
<dt>Режимы взаимодействия цветов: </dt>
<dd><table  border="0">
<tr valign="top">
<td>R2_COPYPEN &#160;&#160;</td><td>Пиксели = цвета кисти (самый нормальный режим :) </td></tr>
<tr valign="top">
<td>R2_NOTCOPYPEN &#160;&#160;</td><td>Пиксели = ~кисть <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>R2_BLACK &#160;&#160;</td><td>Пиксели = черный цвет (цвет кисти игнорируется) </td></tr>
<tr valign="top">
<td>R2_WHITE &#160;&#160;</td><td>Пиксели = белый цвет (цвет кисти игнорируется) </td></tr>
<tr valign="top">
<td>R2_NOT &#160;&#160;</td><td>Пиксели = ~пиксели (цвет кисти игнорируется) <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>R2_XORPEN &#160;&#160;</td><td>Пиксели = пиксели ^ кисть </td></tr>
<tr valign="top">
<td>R2_NOTXORPEN &#160;&#160;</td><td>Пиксели = ~ (пиксели ^ кисть) <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>R2_MASKPEN &#160;&#160;</td><td>Пиксели = пиксели &amp; кисть </td></tr>
<tr valign="top">
<td>R2_NOTMASKPEN &#160;&#160;</td><td>Пиксели = ~ (пиксели &amp; кисть) </td></tr>
<tr valign="top">
<td>R2_MASKNOTPEN &#160;&#160;</td><td>Пиксели = пиксели &amp; ~кисть </td></tr>
<tr valign="top">
<td>R2_MASKPENNOT &#160;&#160;</td><td>Пиксели = ~пиксели &amp; кисть <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>R2_MERGEPEN &#160;&#160;</td><td>Пиксели = пиксели | кисть </td></tr>
<tr valign="top">
<td>R2_NOTMERGEPEN &#160;&#160;</td><td>Пиксели = ~ (пиксели | кисть) </td></tr>
<tr valign="top">
<td>R2_MERGENOTPEN &#160;&#160;</td><td>Пиксели = пиксели | ~кисть </td></tr>
<tr valign="top">
<td>R2_MERGEPENNOT &#160;&#160;</td><td>Пиксели = ~пиксели | кисть <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>R2_NOP &#160;&#160;</td><td>Пиксели вообще не изменяются. </td></tr>
</table>
</dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 5);       <span class="comment">// При рисовании белым цветом в режиме</span>
          <a class="code" href="a00029.htm#ga3ddd148ec8af2d1f722b398ee7e17a71" title="Устанавливает режим взаимодействия цветов при рисовании.">txSetROP2</a> (R2_XORPEN);          <span class="comment">//   R2_XORPEN цвета на экране инвертируются</span>

          <a class="code" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine</a> (100, 100, 200, 200);    <span class="comment">// Рисуем первый раз - линия появляется</span>
          <a class="code" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep</a> (1000);
          <a class="code" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine</a> (100, 100, 200, 200);    <span class="comment">// Рисуем второй раз - линия исчезает</span>

          <a class="code" href="a00029.htm#ga3ddd148ec8af2d1f722b398ee7e17a71" title="Устанавливает режим взаимодействия цветов при рисовании.">txSetROP2</a> (R2_COPYPEN);         <span class="comment">// Восстанавливаем нормальный режим</span>
          <a class="code" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine</a> (100, 100, 200, 200);    <span class="comment">// Рисуем первый раз - линия появляется</span>

          <a class="code" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine</a> (100, 100, 200, 200);    <span class="comment">// Рисуем первый раз - линия остается</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad05e2877657ce6d3a55174fe51c4b0c5"></a><!-- doxytag: member="TXLib.h::txExtractColor" ref="gad05e2877657ce6d3a55174fe51c4b0c5" args="(COLORREF color, COLORREF component)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txExtractColor </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>component</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Извлекает цветовую компоненту (цветовой канал) из смешанного цвета. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>Смешанный цвет </td></tr>
    <tr><td class="paramname">component</td><td>Извлекаемая компонента, см. txColors</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Цветовая компонента, см. txColors</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a> </dd>
<dd>
<a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00029.htm#gad05e2877657ce6d3a55174fe51c4b0c5" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00029.htm#ga0dc8953591b63696392ec581c6b25f7c" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00029.htm#ga1a87b7cd3e5a74e4dc6828d42d03fffa" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> red       = <a class="code" href="a00029.htm#gad05e2877657ce6d3a55174fe51c4b0c5" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (color, <a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
          <span class="keywordtype">int</span> lightness = <a class="code" href="a00029.htm#gad05e2877657ce6d3a55174fe51c4b0c5" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет.">TX_BLUE</a>, <a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e" title="Светлота цвета в модели HSL.">TX_LIGHTNESS</a>);

          Другие примеры см. в функциях AppearText(), AppearEarth() Примера 5 (&quot;Циклы&quot;).
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga0dc8953591b63696392ec581c6b25f7c"></a><!-- doxytag: member="TXLib.h::txRGB2HSL" ref="ga0dc8953591b63696392ec581c6b25f7c" args="(COLORREF rgbColor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txRGB2HSL </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>rgbColor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Преобразует цвет из формата RGB в формат HSL. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">rgbColor</td><td>Преобразуемый цвет в формате <span class="s">&#160; ЕГЭ &#160;</span> RGB</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Созданный цвет в виде COLORREF.</dd></dl>
<p>Формат <b>RGB</b> определяется как</p>
<ul>
<li>Красная компонента цвета (Red), от 0 до 255.</li>
<li>Зеленая компонента цвета (Green), от 0 до 255.</li>
<li>Синяя компонента цвета (Blue), от 0 до 255.</li>
</ul>
<p>Формат <b>HSL</b> определяется как</p>
<ul>
<li>Цветовой тон (Hue), от 0 до 255 <b>(не до 360).</b></li>
<li>Насыщенность (Saturation), от 0 до 255.</li>
<li>Светлота (Lightness), от 0 до 255.</li>
</ul>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a> </dd>
<dd>
<a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00029.htm#gad05e2877657ce6d3a55174fe51c4b0c5" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00029.htm#ga0dc8953591b63696392ec581c6b25f7c" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00029.htm#ga1a87b7cd3e5a74e4dc6828d42d03fffa" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF hslColor = <a class="code" href="a00029.htm#ga0dc8953591b63696392ec581c6b25f7c" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1a87b7cd3e5a74e4dc6828d42d03fffa"></a><!-- doxytag: member="TXLib.h::txHSL2RGB" ref="ga1a87b7cd3e5a74e4dc6828d42d03fffa" args="(COLORREF hslColor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txHSL2RGB </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>hslColor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Преобразует цвет из формата HSL в формат RGB. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">hslColor</td><td>Преобразуемый цвет в формате HSL</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Созданный цвет в виде COLORREF.</dd></dl>
<p>Формат <b>RGB</b> определяется как</p>
<ul>
<li>Красная компонента цвета (Red), от 0 до 255.</li>
<li>Зеленая компонента цвета (Green), от 0 до 255.</li>
<li>Синяя компонента цвета (Blue), от 0 до 255.</li>
</ul>
<p>Формат <b>HSL</b> определяется как</p>
<ul>
<li>Цветовой тон (Hue), от 0 до 255 <b>(не до 360).</b></li>
<li>Насыщенность (Saturation), от 0 до 255.</li>
<li>Светлота (Lightness), от 0 до 255.</li>
</ul>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a> </dd>
<dd>
<a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00029.htm#gad05e2877657ce6d3a55174fe51c4b0c5" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00029.htm#ga0dc8953591b63696392ec581c6b25f7c" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00029.htm#ga1a87b7cd3e5a74e4dc6828d42d03fffa" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> hue = 10, saturation = 128, lightness = 128;
          COLORREF hslColor = <a class="code" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (hue, saturation, lightness);
          <a class="code" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00029.htm#ga1a87b7cd3e5a74e4dc6828d42d03fffa" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB</a> (hslColor));
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2a3940b99d02c630364d4b74e7d08a23"></a><!-- doxytag: member="TXLib.h::txClear" ref="ga2a3940b99d02c630364d4b74e7d08a23" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txClear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Стирает холст текущим цветом заполнения. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga385a6f84e8f1447a33047fa0f3be972b" title="Устанавливает текущий цвет заполнения фигур.">txFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga2a3940b99d02c630364d4b74e7d08a23" title="Стирает холст текущим цветом заполнения.">txClear</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8f2821365f3a6addfcd8c19dd8971ce2"></a><!-- doxytag: member="TXLib.h::txSetPixel" ref="ga8f2821365f3a6addfcd8c19dd8971ce2" args="(int x, int y, COLORREF color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetPixel </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует пиксель (точку на экране). </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Х-координата точки </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата точки </td></tr>
    <tr><td class="paramname">color</td><td>Цвет точки, см. txColors, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gada8f6502237b02eaf8759df026630c74" title="Рисует пиксель (точку на экране).">txPixel()</a>, <a class="el" href="a00029.htm#ga8e07f7bdb1c6a3d461960f14813a3425" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga8f2821365f3a6addfcd8c19dd8971ce2" title="Рисует пиксель (точку на экране).">txSetPixel</a> (100, 100, <a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
          <a class="code" href="a00029.htm#ga8f2821365f3a6addfcd8c19dd8971ce2" title="Рисует пиксель (точку на экране).">txSetPixel</a> (100, 100, <a class="code" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gada8f6502237b02eaf8759df026630c74"></a><!-- doxytag: member="TXLib.h::txPixel" ref="gada8f6502237b02eaf8759df026630c74" args="(int x, int y, double red, double green, double blue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txPixel </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>blue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует пиксель (точку на экране). </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Х-координата точки </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата точки </td></tr>
    <tr><td class="paramname">red</td><td>Количество красного цвета в интервале [0; 1] </td></tr>
    <tr><td class="paramname">green</td><td>Количество зеленого цвета в интервале [0; 1] </td></tr>
    <tr><td class="paramname">blue</td><td>Количество синего цвета в интервале [0; 1]</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga8f2821365f3a6addfcd8c19dd8971ce2" title="Рисует пиксель (точку на экране).">txSetPixel()</a>, <a class="el" href="a00029.htm#ga8e07f7bdb1c6a3d461960f14813a3425" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga8f2821365f3a6addfcd8c19dd8971ce2" title="Рисует пиксель (точку на экране).">txSetPixel</a> (100, 100, 1.0, 0.5, 0.25);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8e07f7bdb1c6a3d461960f14813a3425"></a><!-- doxytag: member="TXLib.h::txGetPixel" ref="ga8e07f7bdb1c6a3d461960f14813a3425" args="(int x, int y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txGetPixel </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущий цвет точки (пикселя) на экране. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Х-координата точки </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата точки</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущий цвет пикселя, см. txColors, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga8f2821365f3a6addfcd8c19dd8971ce2" title="Рисует пиксель (точку на экране).">txSetPixel()</a>, <a class="el" href="a00029.htm#gada8f6502237b02eaf8759df026630c74" title="Рисует пиксель (точку на экране).">txPixel()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF color = <a class="code" href="a00029.htm#ga8e07f7bdb1c6a3d461960f14813a3425" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel</a> (100, 200);

          <span class="keywordflow">if</span> (<a class="code" href="a00029.htm#ga8e07f7bdb1c6a3d461960f14813a3425" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel</a> (x, y) == <a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>)
              CarCrash (x, y);     <span class="comment">// Mess with the red - die like the rest</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga21a12a1077b09af8bdc59e147ca15d46"></a><!-- doxytag: member="TXLib.h::txLine" ref="ga21a12a1077b09af8bdc59e147ca15d46" args="(int x0, int y0, int x1, int y1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txLine </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует линию. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата начальной точки </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата начальной точки </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата конечной точки </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата конечной точки</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линии задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine</a> (100, 200, 400, 500);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga48ebe804bb14c53276f0b334ea7761a2"></a><!-- doxytag: member="TXLib.h::txRectangle" ref="ga48ebe804bb14c53276f0b334ea7761a2" args="(int x0, int y0, int x1, int y1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txRectangle </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует прямоугольник. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения - <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle</a> (100, 200, 400, 500);

          Win32::RoundRect (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 100, 200, 400, 500, 30, 30); <span class="comment">// И такое есть. См. RoundRect в MSDN</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga4e872a3d71ac242bd40d614b9c03f86e"></a><!-- doxytag: member="TXLib.h::txPolygon" ref="ga4e872a3d71ac242bd40d614b9c03f86e" args="(const POINT points[], int numPoints)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txPolygon </td>
          <td>(</td>
          <td class="paramtype">const POINT&#160;</td>
          <td class="paramname"><em>points</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numPoints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует ломаную линию или многоугольник. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">points</td><td>Массив структур POINT с координатами точек </td></tr>
    <tr><td class="paramname">numPoints</td><td>Количество точек в массиве</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения - <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT star[6] = {{150, 300}, {200, 100}, {250, 300}, {100, 200}, {300, 200}, {150, 300}};
          <a class="code" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (star, 6);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf4e90f66d74b812afcd17203cf95b8b5"></a><!-- doxytag: member="TXLib.h::txEllipse" ref="gaf4e90f66d74b812afcd17203cf95b8b5" args="(int x0, int y0, int x1, int y1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txEllipse </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует эллипс. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла описанного прямоугольника </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла описанного прямоугольника </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла описанного прямоугольника </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла описанного прямоугольника</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения - <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse</a> (100, 100, 300, 200);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6870267a8cb62bddbe80ac2483b120a3"></a><!-- doxytag: member="TXLib.h::txCircle" ref="ga6870267a8cb62bddbe80ac2483b120a3" args="(int x, int y, int r)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txCircle </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>r</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует окружность или круг. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Х-координата центра </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата центра </td></tr>
    <tr><td class="paramname">r</td><td>Радиус</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения - <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle</a> (100, 100, 10);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaadb118d9b8ae81cc60d43300326e52a3"></a><!-- doxytag: member="TXLib.h::txArc" ref="gaadb118d9b8ae81cc60d43300326e52a3" args="(int x0, int y0, int x1, int y1, int startAngle, int totalAngle)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txArc </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>totalAngle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует дугу эллипса. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла прямоугольника, описанного вокруг эллипса, содержащего дугу </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла прямоугольника </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла прямоугольника </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла прямоугольника </td></tr>
    <tr><td class="paramname">startAngle</td><td>Угол между направлением оси OX и началом дуги (в градусах) </td></tr>
    <tr><td class="paramname">totalAngle</td><td>Величина дуги (в градусах)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения - <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc</a> (100, 100, 300, 200, 0, 180);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga732885ecfaf47b4051f278473724f44b"></a><!-- doxytag: member="TXLib.h::txPie" ref="ga732885ecfaf47b4051f278473724f44b" args="(int x0, int y0, int x1, int y1, int startAngle, int totalAngle)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txPie </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>totalAngle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует сектор эллипса. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла прямоугольника, описанного вокруг эллипса, содержащего сектор </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла прямоугольника </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла прямоугольника </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла прямоугольника </td></tr>
    <tr><td class="paramname">startAngle</td><td>Угол между направлением оси OX и началом сектора (в градусах) </td></tr>
    <tr><td class="paramname">totalAngle</td><td>Величина сектора (в градусах)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения - <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie</a> (100, 100, 300, 200, 0, 180);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5ee97b4f6688ff24da8a494dc1c15daa"></a><!-- doxytag: member="TXLib.h::txChord" ref="ga5ee97b4f6688ff24da8a494dc1c15daa" args="(int x0, int y0, int x1, int y1, int startAngle, int totalAngle)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txChord </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>totalAngle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует хорду эллипса. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла прямоугольника, описанного вокруг эллипса, содержащего хорду </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла прямоугольника </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла прямоугольника </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла прямоугольника </td></tr>
    <tr><td class="paramname">startAngle</td><td>Угол между направлением оси OX и началом хорды (в градусах) </td></tr>
    <tr><td class="paramname">totalAngle</td><td>Величина хорды (в градусах)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения - <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord</a> (100, 100, 300, 200, 0, 180);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2a51480e07b3e31eb4e74ea29a8a480a"></a><!-- doxytag: member="TXLib.h::txFloodFill" ref="ga2a51480e07b3e31eb4e74ea29a8a480a" args="(int x, int y, COLORREF color=TX_TRANSPARENT, DWORD mode=FLOODFILLSURFACE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txFloodFill </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em> = <code>TX_TRANSPARENT</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD&#160;</td>
          <td class="paramname"><em>mode</em> = <code>FLOODFILLSURFACE</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Заливает произвольный контур текущим цветом заполнения. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Х-координата точки начала заливки </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата точки начала заливки </td></tr>
    <tr><td class="paramname">color</td><td>Цвет заливаемой области (TX_TRANSPARENT - автоопределение) </td></tr>
    <tr><td class="paramname">mode</td><td>Режим заливки (FLOODFILLSURFACE - заливка однородного фона)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет заполнения задается функцией <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>. Не рекомендуется для применения - довольно медленно работает.</p>
<dl>
<dt>Режимы заливки: </dt>
<dd><table  border="0">
<tr valign="top">
<td>FLOODFILLSURFACE &#160;&#160;</td><td>- Заливать область, указанную цветом color. </td></tr>
<tr valign="top">
<td>FLOODFILLBORDER &#160;&#160;</td><td>- Заливать до границы, указанной цветом color. </td></tr>
</table>
</dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga21a12a1077b09af8bdc59e147ca15d46" title="Рисует линию.">txLine()</a>, <a class="el" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00029.htm#ga4e872a3d71ac242bd40d614b9c03f86e" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00029.htm#gaf4e90f66d74b812afcd17203cf95b8b5" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00029.htm#ga6870267a8cb62bddbe80ac2483b120a3" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00029.htm#gaadb118d9b8ae81cc60d43300326e52a3" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00029.htm#ga732885ecfaf47b4051f278473724f44b" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00029.htm#ga5ee97b4f6688ff24da8a494dc1c15daa" title="Рисует хорду эллипса.">txChord()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga2a51480e07b3e31eb4e74ea29a8a480a" title="Заливает произвольный контур текущим цветом заполнения.">txFloodFill</a> (100, 100);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3b57379a564dd459d1573a9c8db0c692"></a><!-- doxytag: member="TXLib.h::txTextOut" ref="ga3b57379a564dd459d1573a9c8db0c692" args="(int x, int y, const char text[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTextOut </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует текст. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Х-координата начальной точки текста </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата начальной точки текста </td></tr>
    <tr><td class="paramname">text</td><td>Текстовая строка</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет текста задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, выравнивание - <a class="el" href="a00029.htm#ga5a3cef04fcf688a051a9eafd6c8338a7" title="Устанавливает текущее выравнивание текста.">txSetTextAlign()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a>, txSetTextAign(), <a class="el" href="a00029.htm#ga356c475609cf282310fc336821adf71f" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (100, 100, <span class="stringliteral">&quot;Здесь могла бы быть Ваша реклама.&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5b3f03bfb0444ac3b7ec74128d878a3f"></a><!-- doxytag: member="TXLib.h::txDrawText" ref="ga5b3f03bfb0444ac3b7ec74128d878a3f" args="(int x0, int y0, int x1, int y1, const char text[], unsigned format=DT_CENTER|DT_VCENTER|DT_WORDBREAK|DT_WORD_ELLIPSIS)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txDrawText </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>format</em> = <code>DT_CENTER|DT_VCENTER|DT_WORDBREAK|DT_WORD_ELLIPSIS</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует текст, размещенный в прямоугольной области. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла области </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла области </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла области </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла области </td></tr>
    <tr><td class="paramname">text</td><td>Текстовая строка </td></tr>
    <tr><td class="paramname">format</td><td>Флаги форматирования текста</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>Цвет текста задается функцией <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, выравнивание - <a class="el" href="a00029.htm#ga5a3cef04fcf688a051a9eafd6c8338a7" title="Устанавливает текущее выравнивание текста.">txSetTextAlign()</a>.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Не выводит ничего, если координаты идут в неверном порядке (x0 &gt; x1 или y0 &gt; y1).</dd></dl>
<p>Флаги форматирования текста см. в MSDN (<a href="http://msdn.com">http://msdn.com</a>), искать "DrawText Function
          (Windows)": <a href="http://msdn.microsoft.com/en-us/library/dd162498%28VS.85%29.aspx.">http://msdn.microsoft.com/en-us/library/dd162498%28VS.85%29.aspx.</a></p>
<p>Автоматический перенос текста на несколько строк включается, если текст состоит из нескольких строк (есть хотя бы один символ новой строки <code></code> <br/>
<br/>
).</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a>, <a class="el" href="a00029.htm#ga356c475609cf282310fc336821adf71f" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga5b3f03bfb0444ac3b7ec74128d878a3f" title="Рисует текст, размещенный в прямоугольной области.">txDrawText</a> (100, 100, <span class="stringliteral">&quot;И здесь могла бы быть Ваша реклама.&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga7726bc7f942c2540b172f83c3c1d5adf"></a><!-- doxytag: member="TXLib.h::txSelectFont" ref="ga7726bc7f942c2540b172f83c3c1d5adf" args="(const char name[], int sizeY, int sizeX=&#45;1, int bold=FW_DONTCARE, bool italic=false, bool underline=false, bool strikeout=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSelectFont </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>name</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeX</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bold</em> = <code>FW_DONTCARE</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>italic</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>underline</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>strikeout</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Выбирает текущий шрифт. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>Название шрифта </td></tr>
    <tr><td class="paramname">sizeY</td><td>Высота букв (размер по Y) </td></tr>
    <tr><td class="paramname">sizeX</td><td>Ширина букв </td></tr>
    <tr><td class="paramname">bold</td><td>Жирность шрифта (от 0 до 1000) </td></tr>
    <tr><td class="paramname">italic</td><td>Курсив </td></tr>
    <tr><td class="paramname">underline</td><td>Подчеркивание </td></tr>
    <tr><td class="paramname">strikeout</td><td>Зачеркивание</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 20);
          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (100, 100, <span class="stringliteral">&quot;Здесь могла бы быть Ваша реклама.&quot;</span>);
          <a class="code" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 20, 10, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>);
          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (100, 200, <span class="stringliteral">&quot;Но ее почему-то нет.&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga356c475609cf282310fc336821adf71f"></a><!-- doxytag: member="TXLib.h::txGetTextExtent" ref="ga356c475609cf282310fc336821adf71f" args="(const char text[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SIZE txGetTextExtent </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Вычисляет размеры текстовой надписи. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>Текстовая строка</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Размеры надписи в структуре SIZE.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a>, <a class="el" href="a00029.htm#ga356c475609cf282310fc336821adf71f" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          SIZE size = <a class="code" href="a00029.htm#ga356c475609cf282310fc336821adf71f" title="Вычисляет размеры текстовой надписи.">txGetTextExtent</a> (text);
          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (100 + size.cx / 2, 200 + size.cy / 2, text);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaad385937fb3526c8f4054ae288d285c6"></a><!-- doxytag: member="TXLib.h::txGetTextExtentX" ref="gaad385937fb3526c8f4054ae288d285c6" args="(const char text[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetTextExtentX </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Вычисляет ширину текстовой надписи. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>Текстовая строка</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Ширина надписи.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a>, <a class="el" href="a00029.htm#ga356c475609cf282310fc336821adf71f" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (100 + <a class="code" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (text) / 2, 200 + <a class="code" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY</a> (text) / 2, text);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3a34e3baf660b310f6ca0d373f36c024"></a><!-- doxytag: member="TXLib.h::txGetTextExtentY" ref="ga3a34e3baf660b310f6ca0d373f36c024" args="(const char text[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetTextExtentY </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Вычисляет высоту текстовой надписи. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>Текстовая строка</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Высота надписи.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a>, <a class="el" href="a00029.htm#ga356c475609cf282310fc336821adf71f" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (100 + <a class="code" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (text) / 2, 200 + <a class="code" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY</a> (text) / 2, text);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5a3cef04fcf688a051a9eafd6c8338a7"></a><!-- doxytag: member="TXLib.h::txSetTextAlign" ref="ga5a3cef04fcf688a051a9eafd6c8338a7" args="(unsigned align=TA_CENTER|TA_BASELINE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txSetTextAlign </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>align</em> = <code>TA_CENTER|TA_BASELINE</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущее выравнивание текста. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">align</td><td>Флаги выравнивания</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее состояние выравнивания текста.</dd></dl>
<dl>
<dt>Флаги выравнивания: </dt>
<dd><table  border="0">
<tr valign="top">
<td>TA_BASELINE &#160;&#160;</td><td>Точка (X,Y) определяет базовую линию текста. </td></tr>
<tr valign="top">
<td>TA_BOTTOM &#160;&#160;</td><td>Точка (X,Y) определяет нижнюю сторону описанного прямоугольника <br/>
<br/>
 (текст лежит выше этой точки). </td></tr>
<tr valign="top">
<td>TA_TOP &#160;&#160;</td><td>Точка (X,Y) определяет верхнюю сторону описанного прямоугольника <br/>
<br/>
 (текст лежит ниже этой точки). <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>TA_CENTER &#160;&#160;</td><td>Текст будет выровнен по горизонтали относительно точки (X,Y). </td></tr>
<tr valign="top">
<td>TA_LEFT &#160;&#160;</td><td>Точка (X,Y) определяет левую сторону описанного прямоугольника <br/>
<br/>
 (текст лежит правее этой точки). </td></tr>
<tr valign="top">
<td>TA_RIGHT &#160;&#160;</td><td>Точка (X,Y) определяет правую сторону описанного прямоугольника <br/>
<br/>
 (текст лежит левее этой точки). </td></tr>
</table>
</dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a>, <a class="el" href="a00029.htm#ga356c475609cf282310fc336821adf71f" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00029.htm#gaad385937fb3526c8f4054ae288d285c6" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00029.htm#ga3a34e3baf660b310f6ca0d373f36c024" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga5a3cef04fcf688a051a9eafd6c8338a7" title="Устанавливает текущее выравнивание текста.">txSetTextAlign</a> (TA_RIGHT);

          <a class="code" href="a00029.htm#ga5a3cef04fcf688a051a9eafd6c8338a7" title="Устанавливает текущее выравнивание текста.">txSetTextAlign</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf147a93f96fadeb7a6a0b6d7f1320bcb"></a><!-- doxytag: member="TXLib.h::txFontExist" ref="gaf147a93f96fadeb7a6a0b6d7f1320bcb" args="(const char name[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">LOGFONT* txFontExist </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>name</em>[]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Ищет шрифт по его названию. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>Название шрифта</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Информация о шрифте в структуре LOGFONT. Если шрифт не найден, возвращает NULL.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordflow">if</span> (<a class="code" href="a00029.htm#gaf147a93f96fadeb7a6a0b6d7f1320bcb" title="Ищет шрифт по его названию.">txFontExist</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>)) <a class="code" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 30);
          <span class="keywordflow">else</span>                               <a class="code" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont</a> (<span class="stringliteral">&quot;Times&quot;</span>, 30);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gac41928e50c6374843e95c270a8c27119"></a><!-- doxytag: member="TXLib.h::txCreateCompatibleDC" ref="gac41928e50c6374843e95c270a8c27119" args="(int sizeX, int sizeY, HBITMAP bitmap=NULL)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC txCreateCompatibleDC </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HBITMAP&#160;</td>
          <td class="paramname"><em>bitmap</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">sizeX</td><td>Ширина холста </td></tr>
    <tr><td class="paramname">sizeY</td><td>Высота холста </td></tr>
    <tr><td class="paramname">bitmap</td><td>Bitmap to be associated with DC</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер, выданный Windows) созданного холста (контекста рисования).</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Созданный контекст затем будет нужно <b>обязательно</b> удалить при помощи <a class="el" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. <br/>
<br/>
 <small>When the program will be shutting down, TXLib will try to delete DCs which were not deleted, but this is not guaranteed.</small></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00029.htm#gac41928e50c6374843e95c270a8c27119" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          HDC save = <a class="code" href="a00029.htm#gac41928e50c6374843e95c270a8c27119" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (100, 100);

          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (backup, 0, 0, 100, 100, <a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0);
          <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (20, 20, <span class="stringliteral">&quot;Boo!&quot;</span>);
          <a class="code" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep</a> (2000);
          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0, 100, 100, save, 0, 0);

          <a class="code" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (save);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2b4df3ccb139bccaf3f7163986cf9b59"></a><!-- doxytag: member="TXLib.h::txLoadImage" ref="ga2b4df3ccb139bccaf3f7163986cf9b59" args="(const char filename[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC txLoadImage </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>filename</em>[]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Загружает из файла изображение в формате BMP. Делает это довольно медленно. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Имя файла с изображением в формате BMP</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор созданного контекста рисования в памяти, с загруженным изображением. Если изображение не загружено (не найден файл, неверный формат файла и т.д.), то NULL.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Изображение загружается в создаваемый контекст рисования в памяти ("виртуальный холст"), который затем будет нужно <b>обязательно</b> удалить при помощи <a class="el" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. <br/>
<br/>
 <small>When the program will be shutting down, TXLib will try to delete DCs which were not deleted, but this is not guaranteed.</small></dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Изображения поддерживаются только в формате BMP. Если взять файл другого формата, например JPG, и переименовать его со сменой расширения на BMP, то от этого формат не изменится. Такое изображение загружено не будет.</dd></dl>
<p>Если функция вернула NULL, то надо прежде всего проверить наличие файла изображения по указанному в программе пути и формат файла. Если путь к файлу не указан (или указан как неполный), то путь отсчитывается от текущей папки программы, которая может не совпадать текущей папкой среды программирования. Текущую папку программы можно посмотреть по команде About в системном меню (она указана там как "Run from").</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00029.htm#gac41928e50c6374843e95c270a8c27119" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>, <a class="el" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00029.htm#gac56527a904e9f996fc388e96dd086f45" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txAlphaBlend()</a>, <a class="el" href="a00029.htm#ga22dc1561bd086c35575bc296d2b379e6" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00021.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC background = <a class="code" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Background.bmp&quot;</span>);
          <span class="keywordflow">if</span> (!background) MessageBox (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Cannot load background&quot;</span>, <span class="stringliteral">&quot;Epic fail&quot;</span>, 0);

          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0, 800, 600, background, 0, 0);
          <a class="code" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (background);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga505f212582bf9b2bf95a4ef15f84af42"></a><!-- doxytag: member="TXLib.h::txDeleteDC" ref="ga505f212582bf9b2bf95a4ef15f84af42" args="(HDC dc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txDeleteDC </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Уничтожает холст (контекст рисования, DC) в памяти. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td>Контекст рисования для уничтожения. <br/>
<br/>
 Если передан указатель, то после уничтожения по указателю записывается NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00029.htm#gac41928e50c6374843e95c270a8c27119" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00021.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC background = <a class="code" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Background.bmp&quot;</span>);
          <span class="keywordflow">if</span> (!background) MessageBox (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Cannot load background&quot;</span>, <span class="stringliteral">&quot;Oh, not now&quot;</span>, 0);

          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0, 800, 600, background, 0, 0);
          <a class="code" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (background);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadf16aed8a30951ff3239fffd440a8c76"></a><!-- doxytag: member="TXLib.h::txBitBlt" ref="gadf16aed8a30951ff3239fffd440a8c76" args="(HDC dest, int xDest, int yDest, int width, int height, HDC src, int xSrc, int ySrc, DWORD rOp=SRCCOPY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txBitBlt </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ySrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD&#160;</td>
          <td class="paramname"><em>rOp</em> = <code>SRCCOPY</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение с одного холста (контекста рисования, DC) на другой. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dest</td><td>Контекст назначения (куда копировать) </td></tr>
    <tr><td class="paramname">xDest</td><td>Х-координата верхнего левого угла изображения-приемника </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла изображения-приемника </td></tr>
    <tr><td class="paramname">width</td><td>Ширина копируемого изображения </td></tr>
    <tr><td class="paramname">height</td><td>Высота копируемого изображения </td></tr>
    <tr><td class="paramname">src</td><td>Контекст источника (откуда копировать) </td></tr>
    <tr><td class="paramname">xSrc</td><td>Х-координата верхнего левого угла изображения-источника </td></tr>
    <tr><td class="paramname">ySrc</td><td>Y-координата верхнего левого угла изображения-источника </td></tr>
    <tr><td class="paramname">rOp</td><td>Растровая операция копирования</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если контексты назначения или источника равны NULL, то они не существуют и копирование вызовет ошибку. Наиболее частая причина - ошибка при загрузке файла изображения и отсутствие проверки на эту ошибку. Пример с проверкой на правильность загрузки см. ниже.</dd></dl>
<dl>
<dt>Режимы копирования: </dt>
<dd><table  border="0">
<tr valign="top">
<td>SRCCOPY &#160;&#160;</td><td>Просто копирует :) - самый распространенный режим <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>BLACKNESS &#160;&#160;</td><td>Заполняет холст-приемник черным цветом (холст-источник игнорируется). </td></tr>
<tr valign="top">
<td>WHITENESS &#160;&#160;</td><td>Заполняет холст-приемник белым цветом (холст-источник игнорируется). </td></tr>
<tr valign="top">
<td>DSTINVERT &#160;&#160;</td><td>Инвертирует цвета на холсте-приемнике (холст-источник игнорируется). </td></tr>
<tr valign="top">
<td>PATCOPY &#160;&#160;</td><td>Копирует цвет текущей кисти холста-приемника. <br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>MERGECOPY &#160;&#160;</td><td>Приемник = приемник &amp; цвет текущей кисти источника. </td></tr>
<tr valign="top">
<td>MERGEPAINT &#160;&#160;</td><td>Приемник = ~ приемник | источник </td></tr>
<tr valign="top">
<td>NOTSRCCOPY &#160;&#160;</td><td>Приемник = ~ источник </td></tr>
<tr valign="top">
<td>NOTSRCERASE &#160;&#160;</td><td>Приемник = ~ (приемник | источник) </td></tr>
<tr valign="top">
<td>PATINVERT &#160;&#160;</td><td>Приемник = кисть приемника ^ приемник </td></tr>
<tr valign="top">
<td>PATPAINT &#160;&#160;</td><td>Приемник = (кисть приемника | ~источник) | приемник </td></tr>
<tr valign="top">
<td>SRCAND &#160;&#160;</td><td>Приемник = приемник &amp; источник </td></tr>
<tr valign="top">
<td>SRCERASE &#160;&#160;</td><td>Приемник = ~приемник &amp; источник </td></tr>
<tr valign="top">
<td>SRCINVERT &#160;&#160;</td><td>Приемник = приемник ^ источник </td></tr>
<tr valign="top">
<td>SRCPAINT &#160;&#160;</td><td>Приемник = приемник | источник </td></tr>
</table>
</dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gac56527a904e9f996fc388e96dd086f45" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txAlphaBlend()</a>, <a class="el" href="a00029.htm#ga22dc1561bd086c35575bc296d2b379e6" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a>, <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00021.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC background = <a class="code" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Background.bmp&quot;</span>);
          <span class="keywordflow">if</span> (!background) MessageBox (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Cannot load background&quot;</span>, <span class="stringliteral">&quot;Once again :(&quot;</span>, 0);

          <a class="code" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0, 800, 600, background, 0, 0);
          <a class="code" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (background);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga22dc1561bd086c35575bc296d2b379e6"></a><!-- doxytag: member="TXLib.h::txTransparentBlt" ref="ga22dc1561bd086c35575bc296d2b379e6" args="(HDC dest, int xDest, int yDest, int width, int height, HDC src, int xSrc, int ySrc, COLORREF transColor=TX_BLACK)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTransparentBlt </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ySrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>transColor</em> = <code>TX_BLACK</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dest</td><td>Контекст назначения (куда копировать) </td></tr>
    <tr><td class="paramname">xDest</td><td>Х-координата верхнего левого угла изображения-приемника </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла изображения-приемника </td></tr>
    <tr><td class="paramname">width</td><td>Ширина копируемого изображения, неотрицательная </td></tr>
    <tr><td class="paramname">height</td><td>Высота копируемого изображения, неотрицательная </td></tr>
    <tr><td class="paramname">src</td><td>Контекст источника (откуда копировать) </td></tr>
    <tr><td class="paramname">xSrc</td><td>Х-координата верхнего левого угла изображения-источника </td></tr>
    <tr><td class="paramname">ySrc</td><td>Y-координата верхнего левого угла изображения-источника </td></tr>
    <tr><td class="paramname">transColor</td><td>Цвет, который будет считаться прозрачным</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если контексты назначения или источника равны NULL, то они не существуют и копирование вызовет ошибку. Наиболее частая причина - ошибка при загрузке файла изображения и отсутствие проверки на эту ошибку. Пример с проверкой на правильность загрузки см. ниже.</dd></dl>
<p>Стандартная функция TransparentBlt из Win32 API может масштабировать изображение. В txTransparentBlt это убрано для упрощения использования. If you need image scaling, use original function TransparentBlt and don't mess with stupid TX-based tools. (See implementation of txTransparentBlt in <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a>).</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00029.htm#ga22dc1561bd086c35575bc296d2b379e6" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a>, <a class="el" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00029.htm#gac41928e50c6374843e95c270a8c27119" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00021.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC superman = <a class="code" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Superman.bmp&quot;</span>);
          <span class="keywordflow">if</span> (!superman) MessageBox (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Cannot load superman, all the monsters will succeed&quot;</span>, <span class="stringliteral">&quot;Sorry&quot;</span>, 0);

          <a class="code" href="a00029.htm#ga22dc1561bd086c35575bc296d2b379e6" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0, 800, 600, superman, 0, 0);
          <a class="code" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (superman);  <span class="comment">// So pity :(</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gac56527a904e9f996fc388e96dd086f45"></a><!-- doxytag: member="TXLib.h::txAlphaBlend" ref="gac56527a904e9f996fc388e96dd086f45" args="(HDC dest, int xDest, int yDest, int width, int height, HDC src, int xSrc, int ySrc, double alpha=1.0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txAlphaBlend </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ySrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>alpha</em> = <code>1.0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dest</td><td>Контекст назначения (куда копировать) </td></tr>
    <tr><td class="paramname">xDest</td><td>Х-координата верхнего левого угла изображения-приемника </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла изображения-приемника </td></tr>
    <tr><td class="paramname">width</td><td>Ширина копируемого изображения, неотрицательная </td></tr>
    <tr><td class="paramname">height</td><td>Высота копируемого изображения, неотрицательная </td></tr>
    <tr><td class="paramname">src</td><td>Контекст источника (откуда копировать). Должен иметь 32-битовый формат и альфа-канал (см. ниже). </td></tr>
    <tr><td class="paramname">xSrc</td><td>Х-координата верхнего левого угла изображения-источника, должна быть в пределах размера источника. </td></tr>
    <tr><td class="paramname">ySrc</td><td>Y-координата верхнего левого угла изображения-источника, должна быть в пределах размера источника. </td></tr>
    <tr><td class="paramname">alpha</td><td>Общая прозрачность изображения, в дополнение к альфа-каналу. <br/>
<br/>
 (0 - все прозрачно, 1 - использовать только альфа-канал)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если контексты назначения или источника равны NULL, то они не существуют и копирование вызовет ошибку. Наиболее частая причина - ошибка при загрузке файла изображения и отсутствие проверки на эту ошибку. Пример с проверкой на правильность загрузки см. ниже.</dd></dl>
<p>Изображение-источник и изображение-приемник не могут налагаться друг на друга.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Изображение должно быть загружено с помощью <a class="el" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a> и иметь 32-битовый RGBA-формат. Дополнительный канал (альфа-канал) этого формата отвечает за прозрачность участков изображения. 24-битовый (TrueColor) формат функция txAlphaBlend не поддерживает.</dd></dl>
<p>Альфа-канал можно сделать, например, в Adobe Photoshop, командой "Новый канал (New Channel)" в палитре каналов (Channels). Черный цвет в альфа-канале соответствует полной прозрачности, белый - полной непрозрачности. При этом в прозрачных областях само изображение (в каналах R, G, B) должно быть черным, и чем прозрачнее, тем чернее.</p>
<p>Строго говоря, надо умножить каналы R,G,B на альфа-канал: <code>R,G,B *= A</code>. Получится вот что:</p>
<ul>
<li>Если значение альфа-канала для некоторого пикселя равно 0 (полная прозрачность), тогда значения каналов R,G,B также станут 0 (это черный цвет).</li>
<li>Если значение альфа-канала равно 255 (полная непрозрачность), тогда значения каналов R,G,B не изменятся.</li>
<li>Для других значений альфа-канала, пиксели изображения станут темнее.</li>
</ul>
<p>В Photoshop это можно сделать командой <b>Image &ndash; Apply Image</b> с параметрами: </p>
<table  border="0">
<tr valign="top">
<td>Source: &#160;&#160;</td><td><em>Имя файла с картинкой</em> </td></tr>
<tr valign="top">
<td>Layer: &#160;&#160;</td><td>Background </td></tr>
<tr valign="top">
<td><b>Channel:</b> &#160;&#160;</td><td><b> Alpha 1</b> </td></tr>
<tr valign="top">
<td>Blending: &#160;&#160;</td><td>Multiply </td></tr>
<tr valign="top">
<td>Opacity: &#160;&#160;</td><td>100% </td></tr>
</table>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Стандартная функция AlphaBlend из Win32 API может масштабировать изображение. В txAlphaBlend это убрано для упрощения использования. If you still need image scaling, use original function AlphaBlend and don't mess with stupid TX-based tools. (See implementation of txAlphaBlend in <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a>).</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gadf16aed8a30951ff3239fffd440a8c76" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00029.htm#ga22dc1561bd086c35575bc296d2b379e6" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a>, <a class="el" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00029.htm#gac41928e50c6374843e95c270a8c27119" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00021.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC batman = <a class="code" href="a00029.htm#ga2b4df3ccb139bccaf3f7163986cf9b59" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Batman.bmp&quot;</span>);
          <span class="keywordflow">if</span> (!batman) MessageBox (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), <span class="stringliteral">&quot;Your call to Batman failed&quot;</span>, <span class="stringliteral">&quot;Help yourself out&quot;</span>, 0);

          <a class="code" href="a00029.htm#gac56527a904e9f996fc388e96dd086f45" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txAlphaBlend</a> (<a class="code" href="a00029.htm#ga37ac6a8a8899decc9e2979d7ccd11f67" title="Возвращает дескриптор контекста рисования холста">txDC</a>(), 0, 0, 800, 600, batman, 0, 0);
          <a class="code" href="a00029.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (batman);  <span class="comment">// Don&#39;t worry, batman will return in &quot;Batman returns&quot; movie</span>
          ...

          <span class="keywordflow">return</span> batman;        <span class="comment">// ...and there he comes</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae92e621aaed81f90e4d142356e38762a"></a><!-- doxytag: member="TXLib.h::txBegin" ref="gae92e621aaed81f90e4d142356e38762a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Блокирует обновление изображения окна, во избежание мигания. </p>
<p>Для снятия блокировки используется функция <a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Избегайте блокирования на долгое время. Это может привести к дефектам изображения в окне. Если в программе требуется задержка, то используйте функцию <a class="el" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, так как она автоматически обновляет изображение, независимо от состояния блокировки.</dd></dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Значение счетчика блокировки (если 0, то рисование разблокировано).</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();                        <span class="comment">// Здесь изображение &quot;замерзнет&quot;</span>
          <a class="code" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
          <a class="code" href="a00029.htm#ga2a3940b99d02c630364d4b74e7d08a23" title="Стирает холст текущим цветом заполнения.">txClear</a>();                        <span class="comment">// Это вызвало бы мигание без txBegin()</span>
          <a class="code" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
          <a class="code" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle</a> (100, 100, 200, 200);
          <a class="code" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();                          <span class="comment">// Здесь мы сразу увидим окончательный рисунок</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga809dc04afd5348247846ee01ce9a06e6"></a><!-- doxytag: member="TXLib.h::txEnd" ref="ga809dc04afd5348247846ee01ce9a06e6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txEnd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Разблокирует обновление окна, заблокированное функцией <a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>. </p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если <a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a> вызывалась несколько раз, то для снятия блокировки требуется столько же раз вызвать <a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>.</dd></dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Значение счетчика блокировки (если 0, то рисование разблокировано).</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();                        <span class="comment">// Здесь изображение &quot;замерзнет&quot;</span>
          <a class="code" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
          <a class="code" href="a00029.htm#ga2a3940b99d02c630364d4b74e7d08a23" title="Стирает холст текущим цветом заполнения.">txClear</a>();                        <span class="comment">// Это вызвало бы мигание без txBegin()</span>
          <a class="code" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00029.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет.">TX_RED</a>);
          <a class="code" href="a00029.htm#ga48ebe804bb14c53276f0b334ea7761a2" title="Рисует прямоугольник.">txRectangle</a> (100, 100, 200, 200);
          <a class="code" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();                          <span class="comment">// Здесь мы сразу увидим окончательный рисунок</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gac9d8435ced05ddc5c29a1a5c9f58f752"></a><!-- doxytag: member="TXLib.h::txDestroyWindow" ref="gac9d8435ced05ddc5c29a1a5c9f58f752" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txDestroyWindow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Уничтожает окно TXlib. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если уничтожается главное окно TXLib, функция main() прерывается и программа автоматически завершается. При этом <b>не</b> гарантируется правильное завершение программы, поэтому так делать <b>не</b> рекомендуется.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gac9d8435ced05ddc5c29a1a5c9f58f752" title="Уничтожает окно TXlib.">txDestroyWindow</a>();  <span class="comment">// Farewell to the world</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad993cf2d466cf203a1365e117b937d7f"></a><!-- doxytag: member="TXLib.h::txSetConsoleAttr" ref="gad993cf2d466cf203a1365e117b937d7f" args="(WORD colors=0x07)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetConsoleAttr </td>
          <td>(</td>
          <td class="paramtype">WORD&#160;</td>
          <td class="paramname"><em>colors</em> = <code>0x07</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает цветовые атрибуты консоли. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">colors</td><td>Цветовые атрибуты консоли.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p><b>Атрибуты</b> - это цвет текста (colorText) и цвет фона (colorBackground), объединенные вместе: <br/>
<br/>
<br/>
<br/>
 <code>colors = colorText + colorBackground * 16</code> <br/>
<br/>
<br/>
<br/>
 либо <br/>
<br/>
<br/>
<br/>
 <code>colors = colorText | (colorBackground &lt;&lt; 4)</code> <br/>
<br/>
<br/>
<br/>
 Цвета атрибутов <b>не</b> имеют никакого отношения к цветам рисования, задаваемыми <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5">TX_...</a> константами, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga977c584db1ecfba20898615a948ab675" title="Устанавливает текущий цвет линий и текста.">txColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga385a6f84e8f1447a33047fa0f3be972b" title="Устанавливает текущий цвет заполнения фигур.">txFillColor()</a> и т.д. Значения цветов см. ниже.</p>
<dl>
<dt>Значения цветов атрибутов </dt>
<dd><table  border="0">
<tr valign="top">
<td>Dec &#160;&#160;</td><td><code>Hex</code> &#160;&#160;</td><td>&#160;&#160;</td><td>Dec &#160;&#160;</td><td><code>Hex</code> &#160;&#160;</td><td><br/>
<br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>0 = &#160;&#160;</td><td><code>0x0</code> &#160;&#160;</td><td>= Черный, &#160;&#160;</td><td>8 = &#160;&#160;</td><td><code>0x8</code> &#160;&#160;</td><td>= Темно-серый, </td></tr>
<tr valign="top">
<td>1 = &#160;&#160;</td><td><code>0x1</code> &#160;&#160;</td><td>= Синий, &#160;&#160;</td><td>9 = &#160;&#160;</td><td><code>0x9</code> &#160;&#160;</td><td>= Светло-синий, </td></tr>
<tr valign="top">
<td>2 = &#160;&#160;</td><td><code>0x2</code> &#160;&#160;</td><td>= Зеленый, &#160;&#160;</td><td>10 = &#160;&#160;</td><td><code>0xA</code> &#160;&#160;</td><td>= Светло-зеленый, </td></tr>
<tr valign="top">
<td>3 = &#160;&#160;</td><td><code>0x3</code> &#160;&#160;</td><td>= Сине-зеленый, &#160;&#160;</td><td>11 = &#160;&#160;</td><td><code>0xB</code> &#160;&#160;</td><td>= Светло-сине-зеленый, </td></tr>
<tr valign="top">
<td>4 = &#160;&#160;</td><td><code>0x4</code> &#160;&#160;</td><td>= Красный, &#160;&#160;</td><td>12 = &#160;&#160;</td><td><code>0xC</code> &#160;&#160;</td><td>= Светло-красный, </td></tr>
<tr valign="top">
<td>5 = &#160;&#160;</td><td><code>0x5</code> &#160;&#160;</td><td>= Малиновый, &#160;&#160;</td><td>13 = &#160;&#160;</td><td><code>0xD</code> &#160;&#160;</td><td>= Светло-малиновый, </td></tr>
<tr valign="top">
<td>6 = &#160;&#160;</td><td><code>0x6</code> &#160;&#160;</td><td>= Темно-желтый, &#160;&#160;</td><td>14 = &#160;&#160;</td><td><code>0xE</code> &#160;&#160;</td><td>= Желтый, </td></tr>
<tr valign="top">
<td>7 = &#160;&#160;</td><td><code>0x7</code> &#160;&#160;</td><td>= Серый, &#160;&#160;</td><td>15 = &#160;&#160;</td><td><code>0xF</code> &#160;&#160;</td><td>= Белый. </td></tr>
</table>
</dd>
</dl>
<p>В шестнадцатиричной системе счисления атрибуты задавать можно проще: если нужен, скажем, желтый цвет на синем фоне, то его код будет <code>0x1e</code> (старшая цифра - старшие 4 бита - это цвет фона, младшая цифра - младшие 4 бита - это цвет текста).</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr</a> (0x1E);
          printf (<span class="stringliteral">&quot;А в небе 0x1 есть город 0xE&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga09e52cdcd5a3fc97015a4ddbd3a0a0c2"></a><!-- doxytag: member="TXLib.h::txGetConsoleAttr" ref="ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WORD txGetConsoleAttr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущие цветовые атрибуты консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущие цветовые атрибуты консоли. См. <a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">unsigned</span> attr = <a class="code" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2cb63c12d9206e9ed2b2c83c9a08f68e"></a><!-- doxytag: member="TXLib.h::txClearConsole" ref="ga2cb63c12d9206e9ed2b2c83c9a08f68e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txClearConsole </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Стирает текст консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>При стирании используются текущие атрибуты (цвета текста и фона) консоли.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole</a>();  <span class="comment">// Ну вот и все, дружок</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga01d08fd56e2e727a76c8ed724a735326"></a><!-- doxytag: member="TXLib.h::txSetConsoleCursorPos" ref="ga01d08fd56e2e727a76c8ed724a735326" args="(int x, int y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txSetConsoleCursorPos </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает позицию мигающего курсора консоли. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата курсора в пикселях. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата курсора в пикселях.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее положение мигающего курсора в структуре POINT.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Нельзя установить совсем любую позицию. Текст в консоли расположен по прямоугольной сетке, размер которой зависит от размеров шрифта консоли. Устанавливаемая позиция округляется, чтобы курсор попал в ячейку сетки. См. пример к функции <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos</a> (<a class="code" href="a00029.htm#gaed186909e8de1f9a6e5f78c362d9b607" title="Возвращает ширину окна рисования.">txGetExtentX</a>(), <a class="code" href="a00029.htm#ga1838cd6a438d4bea5f26bfa47a103a0d" title="Возвращает высоту окна рисования.">txGetExtentY</a>());  <span class="comment">// Центр Вселенной</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3227242c57eef33049cdaee655f4faee"></a><!-- doxytag: member="TXLib.h::txGetConsoleCursorPos" ref="ga3227242c57eef33049cdaee655f4faee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txGetConsoleCursorPos </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает позицию мигающего курсора консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Положение мигающего курсора в структуре POINT.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT pos = <a class="code" href="a00029.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga56faf7c36cf0112165fb705fedf6ec8e"></a><!-- doxytag: member="TXLib.h::txGetConsoleFontSize" ref="ga56faf7c36cf0112165fb705fedf6ec8e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txGetConsoleFontSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает размеры шрифта консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Размеры шрифта консоли в пикселях, в структуре POINT.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT size = <a class="code" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize</a>();
          <a class="code" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos</a> (5 * size.x, 10 * size.y);  <span class="comment">// Теперь мигай там</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa148d2040d20ed74cf46ab186c35f9ed"></a><!-- doxytag: member="TXLib.h::txTextCursor" ref="gaa148d2040d20ed74cf46ab186c35f9ed" args="(bool blink=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTextCursor </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blink</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Запрещает или разрешает рисование мигающего курсора в окне. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">blink</td><td>false - запретить мигающий курсор</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее значение разрешения.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gad993cf2d466cf203a1365e117b937d7f" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga09e52cdcd5a3fc97015a4ddbd3a0a0c2" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00029.htm#ga01d08fd56e2e727a76c8ed724a735326" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00029.htm#ga56faf7c36cf0112165fb705fedf6ec8e" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00029.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a>, <a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00033.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00033.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00033.htm#ga365c78a96945ad9e0a6462c28e01d400" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor</a> (<span class="keyword">false</span>);
          ...
          <a class="code" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga732d4db1467f11a4b569b9d6f2383749"></a><!-- doxytag: member="TXLib.h::txVersion" ref="ga732d4db1467f11a4b569b9d6f2383749" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* txVersion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает строку с информацией о текущей версии библиотеки. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Строка с информацией о текущей версии библиотеки.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          printf (<span class="stringliteral">&quot;I personally love %s\n&quot;</span>, <a class="code" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion</a>());
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacd2416cd6b89106ab6700d0c75922bee"></a><!-- doxytag: member="TXLib.h::txVersionNumber" ref="gacd2416cd6b89106ab6700d0c75922bee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txVersionNumber </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает номер версии библиотеки. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Номер версии библиотеки.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          printf (<span class="stringliteral">&quot;My magic number %x\n&quot;</span>, <a class="code" href="a00029.htm#gacd2416cd6b89106ab6700d0c75922bee" title="Возвращает номер версии библиотеки.">txVersionNumber</a>());
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab8f6180cff1fe90819e3bbb541a90508"></a><!-- doxytag: member="TXLib.h::txGetModuleFileName" ref="gab8f6180cff1fe90819e3bbb541a90508" args="(bool fileNameOnly=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* txGetModuleFileName </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fileNameOnly</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает имя исполняемого файла или изначальный заголовок окна TXLib. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">fileNameOnly</td><td>Возвратить только полное имя исполняемого файла, полученного через Win32 функцию GetFileModuleName (NULL, ...).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>fileNameOnly = true: Имя исполняемого файла <br/>
<br/>
 fileNameOnly = false: Изначальный заголовок окна TXLib</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Возвращается <b>статическая</b> строка.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow()</a>, <a class="el" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion()</a>, <a class="el" href="a00029.htm#gacd2416cd6b89106ab6700d0c75922bee" title="Возвращает номер версии библиотеки.">txVersionNumber()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordflow">for</span> (<span class="keywordtype">int</span> percentDone = 0; percentDone &lt;= 100; percentDone++)
              {
              <span class="keywordtype">char</span> title [1024] = <span class="stringliteral">&quot;&quot;</span>;
              sprintf (title, <span class="stringliteral">&quot;%s - [%-10.*s] %d%%&quot;</span>, <a class="code" href="a00029.htm#gab8f6180cff1fe90819e3bbb541a90508" title="Возвращает имя исполняемого файла или изначальный заголовок окна TXLib.">txGetModuleFileName</a> (<span class="keyword">false</span>),
                       percentDone/10, <span class="stringliteral">&quot;||||||||||&quot;</span>, percentDone);

              SetWindowText (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), title);  <span class="comment">// Вот такой вот progress bar</span>
              <a class="code" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep</a> (50);
              }
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga483686b1ddea3a3de72ff5117f17ea30"></a><!-- doxytag: member="TXLib.h::txSleep" ref="ga483686b1ddea3a3de72ff5117f17ea30" args="(int time)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSleep </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>time</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Задерживает выполнение программы на определенное время. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">time</td><td>Задержка в миллисекундах.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Состояние блокировки обновления окна.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd><b>Во время задержки изображение в окне всегда обновляется.</b></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep</a> (500); <span class="comment">// Поспать полсекунды</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaff3d9c60900531f438a19216485bdd41"></a><!-- doxytag: member="TXLib.h::txUpdateWindow" ref="gaff3d9c60900531f438a19216485bdd41" args="(int update=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txUpdateWindow </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>update</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Разрешает или запрещает автоматическое обновление изображения в окне. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">update</td><td>Режим обновления (true - разрешить, false - запретить).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее состояние режима обновления.</dd></dl>
<p>В отличие от <a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a> и <a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, которые поддерживают вложенные вызовы и работают как "скобки для замерзания картинки", <a class="el" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a> позволяет явно установить или снять блокировку автоматического обновления.</p>
<p>Более полную информацию о блокировке см. в функциях <a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a> и <a class="el" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00029.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00029.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00033.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00033.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00033.htm#ga365c78a96945ad9e0a6462c28e01d400" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow</a> (<span class="keyword">false</span>);
          ...
          <a class="code" href="a00029.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad4ee4d2a16f8f38412e0e7b1c380bf4d"></a><!-- doxytag: member="TXLib.h::txSelectObject" ref="gad4ee4d2a16f8f38412e0e7b1c380bf4d" args="(HGDIOBJ obj)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSelectObject </td>
          <td>(</td>
          <td class="paramtype">HGDIOBJ&#160;</td>
          <td class="paramname"><em>obj</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий объект GDI. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">obj</td><td>Дескриптор объекта GDI</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga4006aaa9b91b25f81bfd88587842531a" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00029.htm#ga4894075399ec8e8747177f90c15fb35d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00029.htm#gafb1459949ebb32b199d07f5464205baf" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00029.htm#ga1a65fa9ddfd07bda8ab3e95873991b76" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00029.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a> <a class="el" href="a00029.htm#ga7726bc7f942c2540b172f83c3c1d5adf" title="Выбирает текущий шрифт.">txSelectFont()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          HPEN pen = CreatePen (PS_DASH, 1, <a class="code" href="a00029.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));
          <a class="code" href="a00029.htm#gad4ee4d2a16f8f38412e0e7b1c380bf4d" title="Устанавливает текущий объект GDI.">txSelectObject</a> (pen);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga478e37d200950e3e5ad78779e803387e"></a><!-- doxytag: member="TXLib.h::txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillCloseAndIWillNotBeAskingWhereIsMyPicture" ref="ga478e37d200950e3e5ad78779e803387e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillCloseAndIWillNotBeAskingWhereIsMyPicture </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Делает нечто иногда удобное. См. название функции. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<p>У этой функции есть синоним с простым понятным названием, поищите его в файле библиотеки, около <em>определения</em> этой функции. Или можно <span class="s">&#160; скопировать &#160;</span> набрать это километровое имя и посмотреть, что получится.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> main()
              {
              <a class="code" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow</a> (800, 600);

              <a class="code" href="a00029.htm#ga5a3cef04fcf688a051a9eafd6c8338a7" title="Устанавливает текущее выравнивание текста.">txSetTextAlign</a> (TA_CENTER);
              <a class="code" href="a00029.htm#ga3b57379a564dd459d1573a9c8db0c692" title="Рисует текст.">txTextOut</a> (<a class="code" href="a00029.htm#gaed186909e8de1f9a6e5f78c362d9b607" title="Возвращает ширину окна рисования.">txGetExtentX</a>()/2, <a class="code" href="a00029.htm#ga1838cd6a438d4bea5f26bfa47a103a0d" title="Возвращает высоту окна рисования.">txGetExtentY</a>()/2, <span class="stringliteral">&quot;Press any key to exit!&quot;</span>);

              <a class="code" href="a00029.htm#ga478e37d200950e3e5ad78779e803387e" title="Делает нечто иногда удобное. См. название функции.">txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillCloseAndIWillNotBeAskingWhereIsMyPicture</a>();
              <span class="keywordflow">return</span> 0;
              }
</pre></div> </dd>
</dl>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="footer">Документация по TX Library. Последние изменения: Wed Jun 8 2011 23:25:00. Создано системой&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>

</body>
</html>
