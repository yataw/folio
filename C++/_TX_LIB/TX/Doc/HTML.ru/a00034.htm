<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Технические детали</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen_.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 0172a, Revision: 161</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00034.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Макросы</a>  </div>
  <div class="headertitle">
<h1>Технические детали</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Макросы</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#gaddc6398e255e44934e56e22f91874d19">_TX_VERSION</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Текущая версия библиотеки.  <a href="#gaddc6398e255e44934e56e22f91874d19"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga6b76c63cd895c2be63ac8e690028623b">_TX_VER</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Версия библиотеки в целочисленном формате.  <a href="#ga6b76c63cd895c2be63ac8e690028623b"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Инициализация библиотеки</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749">txVersion</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает строку с информацией о текущей версии библиотеки.  <a href="#ga732d4db1467f11a4b569b9d6f2383749"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gacd2416cd6b89106ab6700d0c75922bee">txVersionNumber</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает номер версии библиотеки.  <a href="#gacd2416cd6b89106ab6700d0c75922bee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.htm#gab8f6180cff1fe90819e3bbb541a90508">txGetModuleFileName</a> (bool fileNameOnly=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает имя исполняемого файла или изначальный заголовок окна TXLib.  <a href="#gab8f6180cff1fe90819e3bbb541a90508"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Настроечные константы</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gab2cb9c8f646335d3491bc7dc4fb93d3f"></a><!-- doxytag: member="Technical::_TX_CONSOLE_FONT" ref="gab2cb9c8f646335d3491bc7dc4fb93d3f" args="[]" -->
const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#gab2cb9c8f646335d3491bc7dc4fb93d3f">_TX_CONSOLE_FONT</a> [] = &quot;Lucida Console&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Шрифт консоли <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga805670088fa80b6c26f719da11621c7f"></a><!-- doxytag: member="Technical::_TX_CONSOLE_COLOR" ref="ga805670088fa80b6c26f719da11621c7f" args="" -->
const COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga805670088fa80b6c26f719da11621c7f">_TX_CONSOLE_COLOR</a> = TX_LIGHTGRAY</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Цвет шрифта консоли <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga2e46adf7525fa0625c9aae3609b3a629"></a><!-- doxytag: member="Technical::_TX_CURSOR_BLINK_INTERVAL" ref="ga2e46adf7525fa0625c9aae3609b3a629" args="" -->
const unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga2e46adf7525fa0625c9aae3609b3a629">_TX_CURSOR_BLINK_INTERVAL</a> = 250</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Интервал мигания курсора консоли (мс) <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gafcc9bd44fad6700bbbf2ee1646d2482d"></a><!-- doxytag: member="Technical::_TX_WINDOW_UPDATE_INTERVAL" ref="gafcc9bd44fad6700bbbf2ee1646d2482d" args="" -->
const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#gafcc9bd44fad6700bbbf2ee1646d2482d">_TX_WINDOW_UPDATE_INTERVAL</a> = 10</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Интервал обновления холста (мс) <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga7859e95fc4faec435abe372989f4f8ac"></a><!-- doxytag: member="Technical::_TX_TIMEOUT" ref="ga7859e95fc4faec435abe372989f4f8ac" args="" -->
const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga7859e95fc4faec435abe372989f4f8ac">_TX_TIMEOUT</a> = 1000</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Таймаут операций ожидания (мс) <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga352331b32407c4e95bc4f7a5e39fad25"></a><!-- doxytag: member="Technical::_TX_BUFSIZE" ref="ga352331b32407c4e95bc4f7a5e39fad25" args="" -->
const unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga352331b32407c4e95bc4f7a5e39fad25">_TX_BUFSIZE</a> = 1024</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Размеры внутренних статических строковых буферов TXLib. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaa7273b2f613970c283053c5d9136addd"></a><!-- doxytag: member="Technical::_TX_BIGBUFSIZE" ref="gaa7273b2f613970c283053c5d9136addd" args="" -->
const unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#gaa7273b2f613970c283053c5d9136addd">_TX_BIGBUFSIZE</a> = 2048</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Размеры внутренних статических строковых буферов TXLib. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#gaab281ee20ea6be5eae34d0e15bf03dcf">_TX_NOINIT</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Запрет статической инициализации TXLib.  <a href="#gaab281ee20ea6be5eae34d0e15bf03dcf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga2c0a4fe0612f109c5c88d6d55a061db5">_TX_WAITABLE_PARENTS</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Список запускающих программ, которые ждут нажатия клавиши после завершения процесса TXLib.  <a href="#ga2c0a4fe0612f109c5c88d6d55a061db5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga9a495d013c6f08cd50220aca99ca56c2">_TX_ALLOW_KILL_PARENT</a>&#160;&#160;&#160;true</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разрешать принудительное завершение вызывающих программ, ждущих нажатия клавиш после завершения TXLib.  <a href="#ga9a495d013c6f08cd50220aca99ca56c2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#gab4c131ad86b5b53baf2e8b271876c814">_TX_CONSOLE_MODE</a>&#160;&#160;&#160;SWP_HIDEWINDOW</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Режим отображения консольного окна. Допустимы любые флаги функции SetWindowPos.  <a href="#gab4c131ad86b5b53baf2e8b271876c814"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#ga1c7c387b21adad57d0dda2f8bd84ad1c">_TX_ALLOW_TRACE</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Включает/отключает внутреннюю трассировку исполнения кода библиотеки.  <a href="#ga1c7c387b21adad57d0dda2f8bd84ad1c"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.htm#gac47df5e3eeabebd815393cb32b81343d">_TX_TRACE</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Трассирует исполнение кода через OutputDebugString().  <a href="#gac47df5e3eeabebd815393cb32b81343d"></a><br/></td></tr>
</table>
<hr/><h2>Макросы</h2>
<a class="anchor" id="gaddc6398e255e44934e56e22f91874d19"></a><!-- doxytag: member="TXLib.h::_TX_VERSION" ref="gaddc6398e255e44934e56e22f91874d19" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_VERSION</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Текущая версия библиотеки. </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor">            #define _TX_VERSION &quot;TXLib [Version: 1.72a, Revision 50]&quot; (пример)</span>
<span class="preprocessor">            #define _TX_AUTHOR  &quot;Copyright (C) Ded (Ilya Dedinsky, http://ded32.net.ru)&quot;</span>
</pre></div><p> Эти константы автоматически обновляется при обновлении версии.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion()</a> </dd></dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l00079">79</a></p>

</div>
</div>
<a class="anchor" id="ga6b76c63cd895c2be63ac8e690028623b"></a><!-- doxytag: member="TXLib.h::_TX_VER" ref="ga6b76c63cd895c2be63ac8e690028623b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_VER</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Версия библиотеки в целочисленном формате. </p>
<p>Формат: старшее слово - номер версии, младшее - номер ревизии, в двоично-десятичном формате. Например, <code>0x172a0050</code> - версия <code>0.172a</code>, ревизия <code>50</code>.</p>
<p>Эта константа автоматически обновляется при обновлении версии.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment"><span class="preprocessor">            #if !(defined (_TX_VER) &amp;&amp; (_TX_VER &gt;= 0x172a0000))</span>
<span class="preprocessor"></span><span class="preprocessor">            #error Must use TXLib.h version &gt;= 1.72 to compile this.</span>
<span class="preprocessor">            #endif</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l00103">103</a></p>

</div>
</div>
<a class="anchor" id="gaab281ee20ea6be5eae34d0e15bf03dcf"></a><!-- doxytag: member="TXLib.h::_TX_NOINIT" ref="gaab281ee20ea6be5eae34d0e15bf03dcf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_NOINIT</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Запрет статической инициализации TXLib. </p>
<p>Если константа определена с помощью #define до включения <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a> в программу, статическая инициализация не проводится. По умолчанию она проводится.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Статическая инициализация включает:<ul>
<li>Открытие окна консоли,</li>
<li>Установку кодовой страницы 1251 консоли для поддержки русского языка,</li>
<li>Установку русской локали стандартной библиотеки,</li>
<li>Переинициализация библиотек stdio и iostream на случай, если приложение не скомпоновано как консольное и библиотеки остались неинициализированы,</li>
<li>Перехват системных сигналов (деление на 0, обращение по неверному адресу и т.д.),</li>
<li>Перехват необработанных исключений,</li>
<li>Смена заголовка консольного окна,</li>
<li>Установка режима паузы по завершении программы, чтобы окно закрывалось не сразу,</li>
<li>Подавление паузы при запуске из сред программирования, заставляющей нажимать на клавишу два раза. <br/>
<br/>
</li>
</ul>
</dd>
<dd>
Если статическая инициализация запрещена, но создается окно TXLib с помощью <a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a>, то библиотека все равно будет инициализирована.</dd></dl>
<p>Может задаваться перед включением <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a> в программу. </p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gaca799138bbc60568976aef93fcb3bb2b" title="Создание окна рисования">txCreateWindow()</a>, _TX_ALLOW_KILL_PARENTS, <a class="el" href="a00034.htm#ga2c0a4fe0612f109c5c88d6d55a061db5" title="Список запускающих программ, которые ждут нажатия клавиши после завершения процесса TXLib...">_TX_WAITABLE_PARENTS</a>, <a class="el" href="a00034.htm#gab4c131ad86b5b53baf2e8b271876c814" title="Режим отображения консольного окна. Допустимы любые флаги функции SetWindowPos.">_TX_CONSOLE_MODE</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment"><span class="preprocessor">          #define _TX_NOINIT</span>
<span class="preprocessor">          #include &quot;TXLib.h&quot;</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l02734">2734</a></p>

</div>
</div>
<a class="anchor" id="ga2c0a4fe0612f109c5c88d6d55a061db5"></a><!-- doxytag: member="TXLib.h::_TX_WAITABLE_PARENTS" ref="ga2c0a4fe0612f109c5c88d6d55a061db5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_WAITABLE_PARENTS</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><pre class="fragment"><span class="stringliteral">&quot;cmd.exe:devenv.exe, &quot;</span>                    <span class="comment">/* MSVS 2003-2010  */</span> \
                                          <span class="stringliteral">&quot;vcspawn.exe:msdev.exe, &quot;</span>                 <span class="comment">/* MSVS 6          */</span> \
                                          <span class="stringliteral">&quot;cb_console_runner.exe:codeblocks.exe, &quot;</span>  <span class="comment">/* CodeBlocks 8-10 */</span> \
                                          <span class="stringliteral">&quot;cmd.exe:console_runner.exe, &quot;</span>            <span class="comment">/* CodeBlocks 1    */</span> \
                                          <span class="stringliteral">&quot;starter.exe:eclipse.exe, &quot;</span>               <span class="comment">/* Eclipse 4       */</span> \
                                          <span class="stringliteral">&quot;starter.exe:javaw.exe&quot;</span>
</pre></div>
<p>Список запускающих программ, которые ждут нажатия клавиши после завершения процесса TXLib. </p>
<p>Если программа перечислена в списке и TXLib запущена из нее, то при завершении TXLib указанная программа будет закрыта. (Это произойдет, если не открыто графическое окно TXLib, а есть только окно консоли.)</p>
<p>Программы разделяются пробелом или запятой. Допускается указание родителя запускающей программы, после двоеточия.</p>
<p>Может задаваться перед включением <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a> в программу.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd>_TX_ALLOW_KILL_PARENTS, <a class="el" href="a00034.htm#gaab281ee20ea6be5eae34d0e15bf03dcf" title="Запрет статической инициализации TXLib.">_TX_NOINIT</a> </dd></dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l02757">2757</a></p>

</div>
</div>
<a class="anchor" id="ga9a495d013c6f08cd50220aca99ca56c2"></a><!-- doxytag: member="TXLib.h::_TX_ALLOW_KILL_PARENT" ref="ga9a495d013c6f08cd50220aca99ca56c2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_ALLOW_KILL_PARENT&#160;&#160;&#160;true</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Разрешать принудительное завершение вызывающих программ, ждущих нажатия клавиш после завершения TXLib. </p>
<p>Иначе отменяется собственная пауза до нажатия клавиши, встроенная в TXLib, и пусть тогда паузу делает вызывающий процесс.</p>
<p>Список вызывающих программ, которые могут делать такую паузу, задается в _TX_WAITABLE_PARENTS.</p>
<p>Может задаваться перед включением <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a> в программу.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00034.htm#ga2c0a4fe0612f109c5c88d6d55a061db5" title="Список запускающих программ, которые ждут нажатия клавиши после завершения процесса TXLib...">_TX_WAITABLE_PARENTS</a>, <a class="el" href="a00034.htm#gaab281ee20ea6be5eae34d0e15bf03dcf" title="Запрет статической инициализации TXLib.">_TX_NOINIT</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment"><span class="preprocessor">          #define _TX_ALLOW_KILL_PARENT false</span>
<span class="preprocessor">          #include &quot;TXLib.h&quot;</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l02786">2786</a></p>

</div>
</div>
<a class="anchor" id="gab4c131ad86b5b53baf2e8b271876c814"></a><!-- doxytag: member="TXLib.h::_TX_CONSOLE_MODE" ref="gab4c131ad86b5b53baf2e8b271876c814" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_CONSOLE_MODE&#160;&#160;&#160;SWP_HIDEWINDOW</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Режим отображения консольного окна. Допустимы любые флаги функции SetWindowPos. </p>
<p>По умолчанию: <code>SWP_HIDEWINDOW</code> &ndash; Скрывать консольное окно.</p>
<p>Может задаваться перед включением <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a> в программу.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00034.htm#gaab281ee20ea6be5eae34d0e15bf03dcf" title="Запрет статической инициализации TXLib.">_TX_NOINIT</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment"><span class="preprocessor">          #define _TX_CONSOLE_MODE SWP_SHOWWINDOW // Наоборот, показать окно</span>
<span class="preprocessor">          #include &quot;TXLib.h&quot;</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l02806">2806</a></p>

</div>
</div>
<a class="anchor" id="ga1c7c387b21adad57d0dda2f8bd84ad1c"></a><!-- doxytag: member="TXLib.h::_TX_ALLOW_TRACE" ref="ga1c7c387b21adad57d0dda2f8bd84ad1c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_ALLOW_TRACE</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Включает/отключает внутреннюю трассировку исполнения кода библиотеки. </p>
<p>Трассировка идет через макрос _TX_TRACE, который подставляется перед каждым оператором (statement). По умолчанию трассировка выключена.</p>
<p>По умолчанию трассировка ведется через функцию OutputDebugString(), ее вывод можно перехватить утилитами-логгерами, например, <a href="http://technet.microsoft.com/ru-ru/sysinternals/bb896647%28en-us%29.aspx">DebugView</a>. Это можно изменить, переопределив макрос _TX_TRACE.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Трассировка <b>очень</b> тормозит выполнение программы, особенно при отладке в Microsoft Visual Studio. В этом случае лучше пользоваться DebugView (см. выше) и запускать отлаживаемую программу отдельно, а не из-под отладчика Visual Studio.</dd></dl>
<p>_TX_ALLOW_TRACE и _TX_TRACE задаются перед включением <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a> в программу. </p>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment"><span class="preprocessor">          #define  _TX_ALLOW_TRACE  // Для просмотра трассы запустить DebugView</span>
<span class="preprocessor">          #include &quot;TXLib.h&quot;</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l03232">3232</a></p>

</div>
</div>
<a class="anchor" id="gac47df5e3eeabebd815393cb32b81343d"></a><!-- doxytag: member="TXLib.h::_TX_TRACE" ref="gac47df5e3eeabebd815393cb32b81343d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_TRACE</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Трассирует исполнение кода через OutputDebugString(). </p>
<p>По умолчанию трассировка ведется через функцию OutputDebugString(), ее вывод можно перехватить утилитами-логгерами, например, <a href="http://technet.microsoft.com/ru-ru/sysinternals/bb896647%28en-us%29.aspx">DbgView</a>. Для раскраски лога есть файл <code>TX\Dev\DbgView.ini,</code> его надо загрузить в DbgView через меню Edit/Filter/Load (Ctrl+L).</p>
<p>С помощью TX_TRACE можно трассировать код самой библиотеки TXLib. Для этого надо разрешить трассировку TXLib, определив макрос _TX_ALLOW_TRACE перед включением файла <a class="el" href="a00024.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a> в программу. По умолчанию трассировка TXLib выключена.</p>
<p>TX_TRACE можно переопределить в свой код. Тогда, если трассировка библиотеки разрешена, он будет вызываться почти перед каждой исполняемой строкой TXLib. Может быть, это кому-нибудь будет интересно. </p>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> main()
              {
              ...
              TX_TRACE  <span class="comment">// Через DebugView увидим имя файла и номер выполняемой строки</span>
              ...
              }
</pre></div> <div class="fragment"><pre class="fragment"><span class="preprocessor">          #define  TX_TRACE  printf (__TX_FILELINE__ &quot;\n&quot;);</span>
<span class="preprocessor">          #include &quot;TXLib.h&quot;</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00024_source.htm">TXLib.h</a> строка <a class="el" href="a00024_source.htm#l03317">3317</a></p>

</div>
</div>
<hr/><h2>Функции</h2>
<a class="anchor" id="ga732d4db1467f11a4b569b9d6f2383749"></a><!-- doxytag: member="TXLib.h::txVersion" ref="ga732d4db1467f11a4b569b9d6f2383749" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* txVersion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает строку с информацией о текущей версии библиотеки. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Строка с информацией о текущей версии библиотеки.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          printf (<span class="stringliteral">&quot;I personally love %s\n&quot;</span>, <a class="code" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion</a>());
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacd2416cd6b89106ab6700d0c75922bee"></a><!-- doxytag: member="TXLib.h::txVersionNumber" ref="gacd2416cd6b89106ab6700d0c75922bee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txVersionNumber </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает номер версии библиотеки. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Номер версии библиотеки.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          printf (<span class="stringliteral">&quot;My magic number %x\n&quot;</span>, <a class="code" href="a00029.htm#gacd2416cd6b89106ab6700d0c75922bee" title="Возвращает номер версии библиотеки.">txVersionNumber</a>());
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab8f6180cff1fe90819e3bbb541a90508"></a><!-- doxytag: member="TXLib.h::txGetModuleFileName" ref="gab8f6180cff1fe90819e3bbb541a90508" args="(bool fileNameOnly=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* txGetModuleFileName </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fileNameOnly</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает имя исполняемого файла или изначальный заголовок окна TXLib. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">fileNameOnly</td><td>Возвратить только полное имя исполняемого файла, полученного через Win32 функцию GetFileModuleName (NULL, ...).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>fileNameOnly = true: Имя исполняемого файла <br/>
<br/>
 fileNameOnly = false: Изначальный заголовок окна TXLib</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Возвращается <b>статическая</b> строка.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow()</a>, <a class="el" href="a00029.htm#ga732d4db1467f11a4b569b9d6f2383749" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion()</a>, <a class="el" href="a00029.htm#gacd2416cd6b89106ab6700d0c75922bee" title="Возвращает номер версии библиотеки.">txVersionNumber()</a> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordflow">for</span> (<span class="keywordtype">int</span> percentDone = 0; percentDone &lt;= 100; percentDone++)
              {
              <span class="keywordtype">char</span> title [1024] = <span class="stringliteral">&quot;&quot;</span>;
              sprintf (title, <span class="stringliteral">&quot;%s - [%-10.*s] %d%%&quot;</span>, <a class="code" href="a00029.htm#gab8f6180cff1fe90819e3bbb541a90508" title="Возвращает имя исполняемого файла или изначальный заголовок окна TXLib.">txGetModuleFileName</a> (<span class="keyword">false</span>),
                       percentDone/10, <span class="stringliteral">&quot;||||||||||&quot;</span>, percentDone);

              SetWindowText (<a class="code" href="a00029.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна холста">txWindow</a>(), title);  <span class="comment">// Вот такой вот progress bar</span>
              <a class="code" href="a00029.htm#ga483686b1ddea3a3de72ff5117f17ea30" title="Задерживает выполнение программы на определенное время.">txSleep</a> (50);
              }
</pre></div> </dd>
</dl>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="footer">Документация по TX Library. Последние изменения: Wed Jun 8 2011 23:25:01. Создано системой&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>

</body>
</html>
